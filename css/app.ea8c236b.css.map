{"version":3,"sources":["app.ea8c236b.css","webpack:///src/src/App.vue","webpack:///src/components/BaseComponents/src/components/BaseComponents/BaseButton.vue","webpack:///src/views/src/views/Start.vue","webpack:///src/components/src/components/CCEditor.vue","webpack:///src/components/CCShowcase/src/components/CCShowcase/CCImage.vue","webpack:///src/components/CCShowcase/src/components/CCShowcase/CCShowcase.vue","webpack:///src/views/src/views/OER.vue","webpack:///src/components/BaseComponents/src/components/BaseComponents/BaseDropdown.vue","webpack:///src/components/BaseComponents/src/components/BaseComponents/BaseInput.vue","webpack:///src/components/PolicyTree/src/components/PolicyTree/PolicyTreeNode.vue","webpack:///src/components/PolicyTree/src/components/PolicyTree/PolicyTree.vue","webpack:///src/components/BaseComponents/src/components/BaseComponents/BaseModal.vue","webpack:///src/components/src/components/ActionChooser.vue","webpack:///src/components/src/components/ActionItem.vue","webpack:///src/components/src/components/ConstraintChooser.vue","webpack:///src/components/src/components/ConstraintItem.vue","webpack:///src/components/src/components/RefinementItem.vue","webpack:///src/components/src/components/RuleItem.vue","webpack:///src/components/src/components/PolicyItem.vue","webpack:///src/components/src/components/EditorNavBar.vue","webpack:///src/components/src/components/RuleEditor.vue","webpack:///src/views/src/views/BuyCaseStudy.vue","webpack:///src/components/src/components/PriceInput.vue","webpack:///src/components/src/components/DimensionEditor.vue"],"names":[],"mappings":"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","file":"app.ea8c236b.css","sourcesContent":["@import url(https://fonts.googleapis.com/css?family=Roboto);\n@import url(https://use.fontawesome.com/releases/v5.7.2/css/all.css);\n\n*:focus {\n  outline: none !important;\n}\nli {\n  list-style-type: none;\n  -webkit-padding-start: 0px;\n          padding-inline-start: 0px;\n}\nul {\n  list-style-type: none;\n  -webkit-padding-start: 0px;\n          padding-inline-start: 0px;\n}\n#app {\n  font-family: \"Roboto\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: left;\n  color: #000000;\n  margin-bottom: 100px;\n  margin-left: 50px;\n  margin-right: 50px;\n}\n@media screen and (max-width: 840px) {\n#app {\n    margin-left: 20px;\n    margin-right: 20px;\n}\n}\n@media screen and (max-width: 500px) {\n#app {\n    margin-left: 10px;\n    margin-right: 10px;\n}\n}\nem, a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #1f3b70;\n  font-style: normal;\n}\na:hover,\na:focus {\n  text-decoration: underline;\n}\n\n\n.base-button[data-v-da05389a] {\n  display: inline-block;\n  color: white;\n  border: 0px black solid;\n  border-radius: 2px;\n  background-color: #1f3b70;\n\n  margin: 10px;\n  padding: 10px 20px;\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n}\n.base-button-disabled[data-v-da05389a] {\n  background-color: gray;\n}\n.base-button-big[data-v-da05389a] {\n  font-size: 1.2em;\n}\n.base-button-textlike[data-v-da05389a] {\n  color: black;\n  background: none;\n  border: none;\n}\n.base-button-textlike[data-v-da05389a]:active {\n  background: none;\n}\n.base-button-input[data-v-da05389a] {\n  background-color: white;\n  border: 1px solid rgb(169, 169, 169);\n  color: black;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  font-family: inherit;\n  font-size: 1em;\n  cursor: text;\n\n  margin: 10px;\n  padding: 10px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n.base-button-remove[data-v-da05389a] {\n  background-color: transparent;\n  color: black;\n  font-weight: bold;\n  width: 20px;\n  height: 20px;\n  margin: 8px;\n  padding: 0;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n@media screen and (max-width: 500px) {\n.base-button[data-v-da05389a] {\n    padding: 8px;\n    margin: 5px;\n    font-size: 14px;\n}\n}\n\n\n.mode-choosing a[data-v-26a8fe46] {\n  display: block;\n  float: left;\n}\n\n\n.question[data-v-41b3684e] {\n  text-align: center;\n}\n.question[data-v-41b3684e]:not(:last-child) {\n  margin-bottom: 40px;\n}\n.question > label[data-v-41b3684e] {\n  font-weight: bold;\n  display: block;\n}\n.question > *[data-v-41b3684e]:not(:last-child) {\n  margin-bottom: 20px;\n}\n.options label[data-v-41b3684e]:not(:last-child) {\n  margin-right: 40px;\n}\n\n\nimg[data-v-ff662da6] {\n  opacity: 0.6;\n  cursor: pointer;\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-drag: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n}\nimg.active[data-v-ff662da6],\nimg[data-v-ff662da6]:hover {\n  opacity: 1;\n}\nimg.active[data-v-ff662da6] {\n  -webkit-box-shadow: 0px 6px 3px -3px gray;\n          box-shadow: 0px 6px 3px -3px gray;\n}\n.ccImages[data-v-ff662da6]{\n  color: #1f3b70;\n}\n\n\n.showcase[data-v-80963898] {\n  display: grid;\n  grid-template-columns: repeat(6, 16.66%);\n  grid-column-gap: 10px;\n}\n.showcase .image[data-v-80963898] {\n  width: 100%;\n}\n\n\n.oer-page > *[data-v-f79ab296]:not(:last-child) {\n  margin-bottom: 50px;\n}\n.oer-page[data-v-f79ab296]{\n  margin-left: 10%;\n  margin-right: 10%;\n}\n\n\n.fa-caret-down[data-v-81450512] {\n  margin-left: 10px;\n}\n.container[data-v-81450512] {\n  text-align: left;\n}\n#dropdown-icon[data-v-81450512] {\n  text-align: right;\n  position: absolute;\n  right: 10px;\n}\n#dropdown-button[data-v-81450512] {\n  position: relative;\n  text-align: left;\n  margin-bottom: 0px;\n  cursor: pointer;\n}\n.dropdown-button-drop[data-v-81450512] {\n  border-bottom: 1px solid white;\n}\n.dropdown[data-v-81450512] {\n  background-color: white;\n  border: 1px solid rgb(169, 169, 169);\n  position: absolute;\n\n  margin-left: 5px;\n  padding-left: 10px;\n  padding-top: 5px;\n  z-index: 4;\n}\n.dropdown ul[data-v-81450512] {\n  margin: 0px;\n}\n.dropdown li[data-v-81450512] {\n  line-height: 2.5em;\n  margin-bottom: -1px;\n  border-bottom: 1px solid rgb(169, 169, 169);\n  width: 90%;\n}\n.dropdown li[data-v-81450512]:hover {\n  cursor: pointer;\n}\n\n\ninput[data-v-f86e8526] {\n  background-color: white;\n  border: 1px solid rgb(169, 169, 169);\n  color: black;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  font-family: inherit;\n  font-size: 1em;\n  text-align: left;\n\n  margin: 10px;\n  padding: 10px;\n  margin-left: 0px;\n}\n.base-input-undercover[data-v-f86e8526] {\n  border: 1px solid white;\n  border-bottom: 1px solid rgb(169, 169, 169);\n}\n.base-input-undercover[data-v-f86e8526]:focus {\n  border: 1px solid rgb(169, 169, 169);\n}\n.input[data-v-f86e8526]:disabled {\n  color: gray;\n}\n\n\n.label[data-v-07571a03] {\n    display: block;\n    margin: 0px;\n    padding: 8px 0px;\n    cursor: pointer;\n\n    color: black;\n    font-weight: normal;\n    text-decoration: none;\n    border-top: 1px transparent solid;\n    border-bottom: 1px transparent solid;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n.label[data-v-07571a03]:hover:not(.selected) {\n    font-weight: bold;\n    color: #323232;\n}\n.subrules[data-v-07571a03] {\n    padding-left: 20px;\n}\n.label.selected[data-v-07571a03] {\n  color: #1f3b70;\n  font-weight: bold;\n  border-top: 1px #1f3b70 solid;\n  border-bottom: 1px #1f3b70 solid;\n}\n.action[data-v-07571a03] {\n  font-size: 15px;\n}\n.selected .action[data-v-07571a03] {\n  font-weight: normal;\n  font-style: italic;\n}\n\n\n.subrules[data-v-ff037ef0] {\n  padding-left: 20px;\n}\n\n\n.rules[data-v-655abef5] {\n    padding-left: 20px;\n}\n\n\n.modal-mask[data-v-47bfd21c] {\n  position: fixed;\n  z-index: 9998;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: table;\n  -webkit-transition: opacity 0.25s ease;\n  transition: opacity 0.25s ease;\n}\n.modal-wrapper[data-v-47bfd21c] {\n  display: table-cell;\n  vertical-align: middle;\n}\n.modal-container[data-v-47bfd21c] {\n  margin: 0px auto;\n  padding: 20px 30px;\n  background-color: #fff;\n  border-radius: 2px;\n  -webkit-box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\n  -webkit-transition: all 0.25s ease;\n  transition: all 0.25s ease;\n}\n.base-modal-scrollable[data-v-47bfd21c] {\n  overflow-y: scroll !important;\n}\n.modal-body[data-v-47bfd21c] {\n  margin: 20px 0;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  height: 250px;\n  max-height: 250px;\n}\n.modal-default-button[data-v-47bfd21c] {\n  float: right;\n}\n\n/*\n * The following styles are auto-applied to elements with\n * transition=\"modal\" when their visibility is toggled\n * by Vue.js.\n *\n * You can easily play with the modal transition by editing\n * these styles.\n */\n.modal-enter[data-v-47bfd21c] {\n  opacity: 0;\n}\n.modal-leave-active[data-v-47bfd21c] {\n  opacity: 0;\n}\n.modal-enter .modal-container[data-v-47bfd21c],\n.modal-leave-active .modal-container[data-v-47bfd21c] {\n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n\n/* The following style creates a custom scroll bar\n * for the modal to fit better into our custom ui design\n*/\n[data-v-47bfd21c]::-webkit-scrollbar {\n  width: 10px;\n}\n[data-v-47bfd21c]::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n[data-v-47bfd21c]::-webkit-scrollbar-thumb {\n  background: #999;\n}\n[data-v-47bfd21c]::-webkit-scrollbar-thumb:hover {\n  background: #777;\n}\n\n\n.actions-list[data-v-b0c1ca4a] {\n  margin: 0px;\n  padding: 0px;\n}\n.actions-list li[data-v-b0c1ca4a] {\n  padding: 0.5em;\n  border-bottom: 1px lightgray solid;\n  cursor: default;\n}\n.actions-list li[data-v-b0c1ca4a]:hover {\n  background-color: rgb(238, 238, 238);\n  cursor: pointer;\n}\n.actions-list .selected[data-v-b0c1ca4a] {\n  background-color: rgb(218, 218, 218);\n}\n.actions-list .selected[data-v-b0c1ca4a]:hover {\n  background-color: rgb(218, 218, 218);\n}\n.modal-footer[data-v-b0c1ca4a] {\n  text-align: right;\n}\n\n\n\n.action-container[data-v-623989ca] {\n  display: inline;\n}\n\n\n.list[data-v-7a82938b] {\n  float: left;\n  margin: 0px 10px;\n  padding: 0px;\n  font-size: 16px;\n  width: 300px;\n  height: 250px;\n  overflow-y: auto;\n}\n.list li[data-v-7a82938b] {\n  padding: 0.5em;\n  border-bottom: 1px lightgray solid;\n  cursor: default;\n}\n.list li[data-v-7a82938b]:hover {\n  background-color: rgb(238, 238, 238);\n  cursor: pointer;\n}\n.list .selected[data-v-7a82938b] {\n  background-color: rgb(218, 218, 218);\n}\n.list .selected[data-v-7a82938b]:hover {\n  background-color: rgb(218, 218, 218);\n}\n.value-container[data-v-7a82938b] {\n  float: left;\n}\n.value-list[data-v-7a82938b] {\n  overflow-y: scroll;\n  height: 250px;\n  width: 335px;\n}\n.numeric-input-container[data-v-7a82938b] {\n  width: 335px;\n  overflow: hidden;\n}\n.number-container[data-v-7a82938b] {\n  float: left;\n  width: calc(50% - 20px);\n  margin-left: 20px;\n}\n.number-input[data-v-7a82938b] {\n  width: 70%;\n}\n.unit-container[data-v-7a82938b] {\n  width: 50%;\n  float: left;\n}\n.unit-list[data-v-7a82938b] {\n  margin-top: 10px;\n  margin-left: 0px;\n}\n.numeric-input-header[data-v-7a82938b] {\n  border-bottom: 1px solid #999;\n}\n.modal-footer[data-v-7a82938b] {\n  margin-top: 50px;\n  text-align: right;\n}\n\n/* changing data that is technically a visible part of the component but hidden using CSS styling allows for easily forcing a component rerender */\n.hidden[data-v-7a82938b] {\n  display: none;\n}\n\n/* custom scroll bar */\n[data-v-7a82938b]::-webkit-scrollbar {\n  width: 10px;\n}\n[data-v-7a82938b]::-webkit-scrollbar-track {\n  background-color: rgb(218, 218, 218);\n}\n[data-v-7a82938b]::-webkit-scrollbar-thumb {\n  background: #999;\n}\n[data-v-7a82938b]::-webkit-scrollbar-thumb:hover {\n  background: #777;\n}\n\n\n.constraint-container[data-v-01549322] {\n  position: relative;\n}\n.edit-constraint[data-v-01549322] {\n  margin: 0px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  max-width: 500px;\n}\n.remove-constraint[data-v-01549322] {\n  position: absolute;\n  top: calc(50% - 18px);\n}\n\n\n.refinement-container[data-v-4a6ed5ee] {\n  position: relative;\n}\n.edit-refinement[data-v-4a6ed5ee] {\n  margin: 0px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  max-width: 500px;\n}\n.remove-refinement[data-v-4a6ed5ee] {\n  position: absolute;\n  top: calc(50% - 18px);\n}\n\n\nh3[data-v-db177708] {\n  margin: 0px;\n}\na[data-v-db177708] {\n  text-decoration: underline;\n}\n.rule-container[data-v-db177708] {\n  min-width: 200px;\n}\n.rule-header[data-v-db177708] {\n  position: relative;\n  margin-bottom: 10px;\n}\n.remove-button[data-v-db177708] {\n  position: absolute;\n  right: 0px;\n  top: -10px;\n}\n.add-button[data-v-db177708] {\n  display: block;\n  margin-top: 10px;\n  margin-left: 0px;\n}\np[data-v-db177708] {\n  line-height: 1.2em;\n}\np.constraints[data-v-db177708] {\n  margin-top: 40px;\n}\n.logical-operator[data-v-db177708] {\n  text-decoration: none;\n  padding: 8px;\n  margin: 2px;\n  font-weight: bold;\n  color: #1f3b70;\n\n  /* disable text selection highlighting */\n  -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */ /* Konqueror HTML */\n       -moz-user-select: none; /* Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none;\n}\n.logical-operator[data-v-db177708]:hover {\n  cursor: pointer;\n}\n.subrule-container[data-v-db177708] {\n  margin-top: 50px;\n}\n\n\n.input[data-v-3e5c9e3a] {\n  margin-left: 30px;\n  width: 225px;\n}\n.input-label[data-v-3e5c9e3a] {\n  display: inline-block;\n  font-weight: bold;\n  text-align: right;\n  width: 190px;\n}\n.input-container[data-v-3e5c9e3a] {\n  margin-bottom: 15px;\n}\n.dropdown-button[data-v-3e5c9e3a] {\n  display: inline-block;\n  width: 190px;\n}\n.asset-container[data-v-3e5c9e3a] {\n  margin-top: 40px;\n  margin-bottom: 60px;\n}\n.base-button-textlike[data-v-3e5c9e3a] {\n  padding-top: 5px;\n  padding-bottom: 5px;\n}\n.constraints-container[data-v-3e5c9e3a] {\n  margin-top: 40px;\n}\n.add-constraint[data-v-3e5c9e3a] {\n  margin-left: 0px;\n  margin-bottom: 20px;\n  padding: 10px 15px;\n}\n.logical-operator[data-v-3e5c9e3a] {\n  text-decoration: none;\n  padding: 8px;\n  margin: 2px;\n  font-weight: bold;\n  color: #1f3b70;\n\n  /* disable text selection highlighting */\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */ /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n}\n.logical-operator[data-v-3e5c9e3a]:hover {\n  cursor: pointer;\n}\n\n\n.editor-nav[data-v-bfb570d0]{\n  padding-top: 15px;\n  padding-bottom: 5px;\n  margin-left: 10px;\n  color: #1f3b70;\n  height: 25px;\n}\n.editor-nav .left[data-v-bfb570d0]{\n  float: left;\n}\n.editor-nav .right[data-v-bfb570d0] {\n  float: right;\n}\neditor-nav .clear[data-v-bfb570d0] {\n  clear: both;\n}\n\n\n.policy-tree[data-v-7bfddc88] {\n  float: left;\n  width: 200px;\n  padding: 0px 8px;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  -webkit-box-shadow: 3px 0px 2px -3px gray;\n          box-shadow: 3px 0px 2px -3px gray;\n  padding-bottom: 12px;\n}\n.policy-detail[data-v-7bfddc88] {\n  margin-left: 220px;\n  padding: 0px 0px 0px 15px;\n}\n.policy-meaning[data-v-7bfddc88]{\n  margin-left: 200px;\n  padding: 10px;\n}\n.header-wrapper[data-v-7bfddc88] {\n  background-color: white;\n  -webkit-box-shadow: 0px 3px 2px -3px gray;\n          box-shadow: 0px 3px 2px -3px gray;\n}\n.editor-header[data-v-7bfddc88] {\n  overflow: hidden;\n\n  padding-bottom: 20px;\n  padding-top: 0px;\n  width: 50%;\n  min-width: 350px;\n}\n.editor-body[data-v-7bfddc88] {\n  padding-top: 24px;\n}\n.editor-nav[data-v-7bfddc88]{\n  padding-top: 15px;\n  padding-bottom: 5px;\n  margin-left: 10px;\n  color: #1f3b70;\n}\n.editor-nav .left[data-v-7bfddc88]{\n  float: left;\n}\n.editor-nav .right[data-v-7bfddc88] {\n  float: right;\n}\neditor-nav .clear[data-v-7bfddc88] {\n  clear: both;\n}\ninput.guid-input[data-v-7bfddc88] {\n  margin-left: 10px;\n  width: 175px;\n}\n.language-container[data-v-7bfddc88] {\n  float: right;\n  text-align: right;\n  width: 50%;\n  margin: 0px;\n  padding: 0px;\n}\n.language-dropdown[data-v-7bfddc88] {\n  display: inline-block;\n}\n.fa-language[data-v-7bfddc88] {\n  margin-right: 5px;\n}\n@media screen and (max-width: 840px) {\n.language-container[data-v-7bfddc88] {\n    text-align: left;\n    float: left;\n    width: 100%;\n}\n.policy-detail[data-v-7bfddc88] {\n    display: inline-block;\n    margin-left: 0px;\n}\n.editor-body[data-v-7bfddc88] {\n    padding: 0px;\n}\n}\n@media screen and (max-width: 500px) {\n.editor-body[data-v-7bfddc88] {\n    margin: 0px;\n}\n}\n\n\ninput[type=\"radio\"][data-v-06015ddf] {\n    vertical-align: bottom;\n}\np[data-v-06015ddf] {\n    cursor: pointer;\n    padding: 12px;\n}\n.role-top[data-v-06015ddf] {\n    background-color: rgb(215, 229, 238);\n    cursor: pointer;\n    padding: 12px;\n    text-align: center;\n}\n.disabled[data-v-06015ddf] {\n    color: gray;\n    font-style: italic;\n}\n.chosen-option[data-v-06015ddf] {\n    border-left: 2px solid black;\n}\n\n\n.invisible[data-v-509b1ecb] {\n    display: none;\n}\n.center[data-v-509b1ecb] {\n    text-align: center;\n}\n.price-input[data-v-509b1ecb] {\n    font-size: inherit;\n    padding: 0px;\n    margin: 0px;\n    border: none;\n    border-bottom: 1px dotted gray;\n    width: 4em;\n    background-color: transparent;\n}\n\n\ntd[data-v-d4c52c12], th[data-v-d4c52c12] {\n    padding: 8px;\n    margin-left: 4px;\n}\ntd[data-v-d4c52c12]:not(.policies-first-cell):not(:first-child), th[data-v-d4c52c12]:not(.policies-first-cell):not(:first-child) {\n  border-left: 4px solid white;\n}\ntr[data-v-d4c52c12]:nth-child(even) {\n    background-color: #DDD;\n}\ntable[data-v-d4c52c12] {\n    border-collapse: collapse;\n}\n.policies-first-cell[data-v-d4c52c12] {\n  border-left: 1px solid black;\n}\nbutton[data-v-d4c52c12] {\n  font-size: inherit;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0px;\n  margin: 0px 8px;\n  color: #444;\n}\nbutton[data-v-d4c52c12]:hover {\n  color: black;\n}\nselect[data-v-d4c52c12] {\n  font-size: inherit;\n  border: none;\n  background-color: transparent;\n}\n.warning[data-v-d4c52c12] {\n  background: rgb(255, 219, 219);\n  border-radius: 3px 3px;\n  color: rgb(204, 0, 0);\n  padding: 8px;\n}\nth.duplicate[data-v-d4c52c12] {\n  background-color: rgb(255, 219, 219);\n}\n\n\n/*# sourceMappingURL=app.ea8c236b.css.map*/","<template>\n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Roboto\");\n@import url(\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\");\n\n*:focus {\n  outline: none !important;\n}\nli {\n  list-style-type: none;\n  padding-inline-start: 0px;\n}\nul {\n  list-style-type: none;\n  padding-inline-start: 0px;\n}\n\n#app {\n  font-family: \"Roboto\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: left;\n  color: #000000;\n  margin-bottom: 100px;\n  margin-left: 50px;\n  margin-right: 50px;\n}\n\n@media screen and (max-width: 840px) {\n  #app {\n    margin-left: 20px;\n    margin-right: 20px;\n  }\n}\n\n@media screen and (max-width: 500px) {\n  #app {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n}\n\nem, a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #1f3b70;\n  font-style: normal;\n}\n\na:hover,\na:focus {\n  text-decoration: underline;\n}\n</style>\n","<template>\n  <button\n    class=\"base-button\"\n    :disabled=\"disabled\"\n    :class=\"{ 'base-button-disabled': disabled, 'base-button-big': big, 'base-button-textlike': textlike, 'base-button-input': input, 'base-button-remove': remove }\"\n    :style=\"{ width: this.width }\"\n    v-on=\"$listeners\"\n  >\n    <slot />\n  </button>\n</template>\n\n<script>\nexport default {\n  name: 'BaseButton',\n  props: {\n    width: {\n      default: 'auto',\n      type: String,\n      required: false,\n    },\n    big: Boolean,\n    textlike: Boolean,\n    input: Boolean,\n    remove: Boolean,\n    disabled: Boolean,\n  },\n};\n</script>\n\n<style scoped>\n.base-button {\n  display: inline-block;\n  color: white;\n  border: 0px black solid;\n  border-radius: 2px;\n  background-color: #1f3b70;\n\n  margin: 10px;\n  padding: 10px 20px;\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.base-button-disabled {\n  background-color: gray;\n}\n\n.base-button-big {\n  font-size: 1.2em;\n}\n\n.base-button-textlike {\n  color: black;\n  background: none;\n  border: none;\n}\n\n.base-button-textlike:active {\n  background: none;\n}\n\n.base-button-input {\n  background-color: white;\n  border: 1px solid rgb(169, 169, 169);\n  color: black;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  font-family: inherit;\n  font-size: 1em;\n  cursor: text;\n\n  margin: 10px;\n  padding: 10px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n.base-button-remove {\n  background-color: transparent;\n  color: black;\n  font-weight: bold;\n  width: 20px;\n  height: 20px;\n  margin: 8px;\n  padding: 0;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n@media screen and (max-width: 500px) {\n  .base-button {\n    padding: 8px;\n    margin: 5px;\n    font-size: 14px;\n  }\n}\n</style>\n","<template>\n  <div class=\"start-page\">\n    <div>\n      <h1>Elektronisches Lizenz-Bearbeitungsprogramm (ELBP)</h1>\n      <h2>Erlaubt die automatische Generierung von Lizenzen in maschinenlesbarem Format</h2>\n    </div>\n    <p>Welche Art Lizenz möchten Sie anlegen?</p>\n    <div v-for=\"mode in modes\" :key=\"mode.name\" class=\"mode-choosing\">\n      <router-link :to=\"mode.path\">\n        <BaseButton :on-click=\"function(){}\">{{ mode.name }}</BaseButton>\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseButton from '../components/BaseComponents/BaseButton.vue';\n\nexport default {\n  name: 'Start',\n  components: {\n    BaseButton,\n  },\n  data() {\n    return {\n      modes: [\n        { name: 'OER (Creative Commons)', path: { name: 'oer' } },\n        { name: 'ODRL Editor', path: { name: 'odrl-editor' } },\n        { name: 'Schul-Cloud Editor', path: { name: 'sc-editor' } },\n      ],\n    };\n  },\n};\n</script>\n\n<style scoped>\n.mode-choosing a {\n  display: block;\n  float: left;\n}\n</style>\n","<template>\n  <div>\n    <div class=\"question\">\n      <label>Erlauben, dass Bearbeitungen Ihres Werkes geteilt werden?</label>\n      <div class=\"options\">\n        <input\n          v-model=\"share\"\n          type=\"radio\"\n          value=\"yes\"\n        >\n        <label>Ja</label>\n        <input\n          v-model=\"share\"\n          type=\"radio\"\n          value=\"no\"\n        >\n        <label>Nein</label>\n        <input\n          v-model=\"share\"\n          type=\"radio\"\n          value=\"alike\"\n        >\n        <label>Ja, aber nur unter gleichen Bedingungen</label>\n      </div>\n    </div>\n    <div class=\"question\">\n      <label>Kommerzielle Nutzungen Ihres Werkes erlauben?</label>\n      <div class=\"options\">\n        <input\n          v-model=\"commercialUse\"\n          type=\"radio\"\n          value=\"yes\"\n        >\n        <label>Ja</label>\n        <input\n          v-model=\"commercialUse\"\n          type=\"radio\"\n          value=\"no\"\n        >\n        <label>Nein</label>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  ID_BY,\n  ID_BY_ND,\n  ID_BY_SA,\n  ID_BY_NC,\n  ID_BY_NC_ND,\n  ID_BY_NC_SA,\n} from '../libs/cc/identifiers';\n\nexport default {\n  name: 'CCEditor',\n  props: {\n    activeLicense: {\n      type: String,\n    },\n  },\n  data() {\n    return {\n      share: 'yes',\n      commercialUse: 'yes',\n    };\n  },\n  watch: {\n    share(value) {\n      this.$emit('activeLicense', this.license(value, this.commercialUse));\n    },\n    commercialUse(value) {\n      this.$emit('activeLicense', this.license(this.share, value));\n    },\n    activeLicense(value) {\n      switch (value) {\n        case ID_BY:\n          this.share = 'yes';\n          this.commercialUse = 'yes';\n          break;\n        case ID_BY_ND:\n          this.share = 'no';\n          this.commercialUse = 'yes';\n          break;\n        case ID_BY_SA:\n          this.share = 'alike';\n          this.commercialUse = 'yes';\n          break;\n        case ID_BY_NC:\n          this.share = 'yes';\n          this.commercialUse = 'no';\n          break;\n        case ID_BY_NC_ND:\n          this.share = 'no';\n          this.commercialUse = 'no';\n          break;\n        case ID_BY_NC_SA:\n          this.share = 'alike';\n          this.commercialUse = 'no';\n          break;\n        default:\n          throw new Exception('illegal argument');\n      }\n    },\n  },\n  methods: {\n    license(share, commercialUse) {\n      if (share === 'yes' && commercialUse === 'yes') {\n        return ID_BY;\n      } if (share === 'no' && commercialUse === 'yes') {\n        return ID_BY_ND;\n      } if (share === 'alike' && commercialUse === 'yes') {\n        return ID_BY_SA;\n      } if (share === 'yes' && commercialUse === 'no') {\n        return ID_BY_NC;\n      } if (share === 'no' && commercialUse === 'no') {\n        return ID_BY_NC_ND;\n      } if (share === 'alike' && commercialUse === 'no') {\n        return ID_BY_NC_SA;\n      }\n      throw new Exception('illegal argument');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.question {\n  text-align: center;\n}\n.question:not(:last-child) {\n  margin-bottom: 40px;\n}\n.question > label {\n  font-weight: bold;\n  display: block;\n}\n.question > *:not(:last-child) {\n  margin-bottom: 20px;\n}\n.options label:not(:last-child) {\n  margin-right: 40px;\n}\n</style>\n","<template>\n  <div class=\"ccImages\">\n    <img :src=\"imageSource\" :class=\"{active: isActive}\" @click=\"$emit('licenseClicked', licenseID)\">\n    <p>{{ name }}</p>\n  </div>\n</template>\n\n<script>\nimport { ccNames } from '../../libs/cc/identifiers';\n\nexport default {\n  name: 'CCImage',\n  props: {\n    imageSource: {\n      required: true,\n    },\n    licenseID: {\n      type: String,\n      required: true,\n    },\n    activeLicense: {\n      type: String,\n      default: '',\n    },\n  },\n  computed: {\n    isActive() {\n      return this.activeLicense === this.licenseID;\n    },\n    name() {\n      return ccNames[this.licenseID];\n    },\n  },\n};\n</script>\n\n<style scoped>\nimg {\n  opacity: 0.6;\n  cursor: pointer;\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-drag: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n}\nimg.active,\nimg:hover {\n  opacity: 1;\n}\nimg.active {\n  box-shadow: 0px 6px 3px -3px gray;\n}\n.ccImages{\n  color: #1f3b70;\n}\n</style>\n","<template>\n  <div class=\"showcase\">\n    <CCImage\n      class=\"image\"\n      :image-source=\"image_by\"\n      license-i-d=\"http://creativecommons.org/licenses/by/4.0/\"\n      :active-license=\"activeLicense\"\n      @licenseClicked=\"$emit('licenseClicked', $event)\"\n    />\n    <CCImage\n      class=\"image\"\n      :image-source=\"image_by_nd\"\n      license-i-d=\"http://creativecommons.org/licenses/by-nd/4.0/\"\n      :active-license=\"activeLicense\"\n      @licenseClicked=\"$emit('licenseClicked', $event)\"\n    />\n    <CCImage\n      class=\"image\"\n      :image-source=\"image_by_sa\"\n      license-i-d=\"http://creativecommons.org/licenses/by-sa/4.0/\"\n      :active-license=\"activeLicense\"\n      @licenseClicked=\"$emit('licenseClicked', $event)\"\n    />\n    <CCImage\n      class=\"image\"\n      :image-source=\"image_by_nc\"\n      license-i-d=\"http://creativecommons.org/licenses/by-nc/4.0/\"\n      :active-license=\"activeLicense\"\n      @licenseClicked=\"$emit('licenseClicked', $event)\"\n    />\n    <CCImage\n      class=\"image\"\n      :image-source=\"image_by_nc_nd\"\n      license-i-d=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\"\n      :active-license=\"activeLicense\"\n      @licenseClicked=\"$emit('licenseClicked', $event)\"\n    />\n    <CCImage\n      class=\"image\"\n      :image-source=\"image_by_nc_sa\"\n      license-i-d=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"\n      :active-license=\"activeLicense\"\n      @licenseClicked=\"$emit('licenseClicked', $event)\"\n    />\n  </div>\n</template>\n\n<script>\nimport CCImage from './CCImage.vue';\n\nexport default {\n  name: 'CCShowcase',\n  components: {\n    CCImage,\n  },\n  props: {\n    activeLicense: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    image_by() {\n      return require('../../img/cc/CC-BY.svg');\n    },\n    image_by_sa() {\n      return require('../../img/cc/CC-BY-SA.svg');\n    },\n    image_by_nd() {\n      return require('../../img/cc/CC-BY-ND.svg');\n    },\n    image_by_nc() {\n      return require('../../img/cc/CC-BY-NC.svg');\n    },\n    image_by_nc_sa() {\n      return require('../../img/cc/CC-BY-NC-SA.svg');\n    },\n    image_by_nc_nd() {\n      return require('../../img/cc/CC-BY-NC-ND.svg');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.showcase {\n  display: grid;\n  grid-template-columns: repeat(6, 16.66%);\n  grid-column-gap: 10px;\n}\n.showcase .image {\n  width: 100%;\n}\n</style>\n","<template>\n  <div class=\"oer-page\">\n    <router-link to=\"/\">\n      <a><i class=\"fas fa-arrow-circle-left\" /> Start</a>\n    </router-link>\n    <CCEditor\n      class=\"cc-editor\"\n      :active-license=\"license\"\n      @activeLicense=\"license = $event\"\n    />\n    <CCShowcase\n      :active-license=\"license\"\n      @licenseClicked=\"license = $event\"\n    />\n    <div>\n      <h2>Was bedeutet diese Lizenz?</h2>\n      <p v-html=\"licenceText\" />\n    </div>\n    <div>\n      <h2>Provisorische Lizenz:</h2>\n      <pre>{{ odrl }}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CCEditor from '../components/CCEditor.vue';\nimport CCShowcase from '../components/CCShowcase/CCShowcase.vue';\n\nimport { ccIDToODRL } from '../libs/cc/odrl';\n\nexport default {\n  name: 'Oer',\n  components: {\n    CCEditor,\n    CCShowcase,\n  },\n  data() {\n    return {\n      license: 'http://creativecommons.org/licenses/by/4.0/',\n    };\n  },\n  computed: {\n    odrl() {\n      return ccIDToODRL(this.license);\n    },\n    licenceText() {\n      let text = '';\n\n      if (this.license === 'http://creativecommons.org/licenses/by/4.0/') {\n        text += 'Ich muss den Namen des Urhebers nennen.<br>';\n      }\n      if (this.license === 'http://creativecommons.org/licenses/by-nd/4.0/') {\n        text += 'Ich muss den Namen des Urhebers nennen.<br>';\n        text += 'Ich darf das Medium nicht bearbeiten.<br>';\n      }\n      if (this.license === 'http://creativecommons.org/licenses/by-sa/4.0/') {\n        text += 'Ich muss den Namen des Urhebers nennen.<br>';\n        text += 'Ich muss das Medium unter gleichen Bedingungen weitergeben.<br>';\n      }\n      if (this.license === 'http://creativecommons.org/licenses/by-nc/4.0/') {\n        text += 'Ich muss den Namen des Urhebers nennen.<br>';\n        text += 'Ich darf das Medium nicht kommerziell verwenden.<br>';\n      }\n      if (this.license === 'http://creativecommons.org/licenses/by-nc-nd/4.0/') {\n        text += 'Ich muss den Namen des Urhebers nennen.<br>';\n        text += 'Ich darf das Medium nicht kommerziell verwenden.<br>';\n        text += 'Ich darf das Medium nicht bearbeiten.<br>';\n      }\n      if (this.license === 'http://creativecommons.org/licenses/by-nc-sa/4.0/') {\n        text += 'Ich muss den Namen des Urhebers nennen.<br>';\n        text += 'Ich darf das Medium nicht kommerziell verwenden.<br>';\n        text += 'Ich muss das Medium unter gleichen Bedingungen weitergeben.<br>';\n      }\n\n      return text;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.oer-page > *:not(:last-child) {\n  margin-bottom: 50px;\n}\n.oer-page{\n  margin-left: 10%;\n  margin-right: 10%;\n}\n</style>\n","<template>\n  <div class=\"container\">\n    <BaseButton\n      id=\"dropdown-button\"\n      input\n      :class=\"{ 'dropdown-button-drop': shouldDisplayList }\"\n      :style=\"{ width: this.width }\"\n      @click=\"clicked()\"\n    >\n      {{ selectedOption }}\n      <i id=\"dropdown-icon\" class=\"fas fa-caret-down\" />\n    </BaseButton>\n\n    <div\n      v-if=\"shouldDisplayList\"\n      class=\"dropdown\"\n      :style=\"{ width: 'auto', minWidth: this.width }\"\n    >\n      <ul\n        v-closable=\"{ exclude: ['dropdown-button', 'dropdown-icon'],\n                      handler: 'onOutsideClick'}\"\n      >\n\n        <li\n          v-for=\"(option, index) in list\"\n          :key=\"index\"\n          @click=\"showList = false; selectedOption = option\"\n        >\n          {{ option }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport BaseButton from './BaseButton.vue';\n\nlet handleOutsideClick;\nVue.directive('closable', {\n  bind(el, binding, vnode) {\n    // Here's the click/touchstart handler\n    // (it is registered below)\n    handleOutsideClick = (e) => {\n      e.stopPropagation();\n      // Get the handler method name and the exclude array\n      // from the object used in v-closable\n      const { exclude, handler } = binding.value;\n      // This variable indicates if the clicked element is excluded\n      let clickedOnExcludedEl = false;\n      exclude.forEach((excludeId) => {\n        // We only run this code if we haven't detected\n        // any excluded element yet\n        if (!clickedOnExcludedEl) {\n          // See if this excluded element\n          // is the same element the user just clicked on\n          if (!e.target.id) {\n            clickedOnExcludedEl = false;\n          } else {\n            clickedOnExcludedEl = excludeId == e.target.id;\n          }\n        }\n      });\n      // We check to see if the clicked element is not\n      // the dialog element and not excluded\n      if (!el.contains(e.target) && !clickedOnExcludedEl) {\n        // If the clicked element is outside the dialog\n        // and not the button, then call the outside-click handler\n        // from the same component this directive is used in\n        vnode.context[handler]();\n      }\n    };\n    // Register click/touchstart event listeners on the whole page\n    document.addEventListener('click', handleOutsideClick);\n  },\n  unbind() {\n    // If the element that has v-closable is removed, then\n    // unbind click/touchstart listeners from the whole page\n    document.removeEventListener('click', handleOutsideClick);\n  },\n});\n\nexport default {\n  name: 'BaseDropdown',\n  components: {\n    BaseButton,\n  },\n  props: {\n    list: {\n      type: Array,\n      required: true,\n    },\n    initValue: {\n      type: String,\n      required: false,\n    },\n    width: {\n      default: '200px',\n      type: String,\n      required: false,\n    },\n  },\n  data() {\n    return {\n      showList: false,\n      selectedListOptionIndex: 0,\n    };\n  },\n  computed: {\n    selectedOption: {\n      get() {\n        return this.list[this.selectedListOptionIndex];\n      },\n      set(option) {\n        this.selectedListOptionIndex = this.list.indexOf(option);\n        this.$emit('selected', option);\n      },\n    },\n    shouldDisplayList() {\n      return this.showList;\n    },\n  },\n  created() {\n    this.selectedOption = this.initValue;\n  },\n  methods: {\n    clicked() {\n      this.showList = !this.showList;\n    },\n    onOutsideClick() {\n      this.showList = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.fa-caret-down {\n  margin-left: 10px;\n}\n\n.container {\n  text-align: left;\n}\n\n#dropdown-icon {\n  text-align: right;\n  position: absolute;\n  right: 10px;\n}\n\n#dropdown-button {\n  position: relative;\n  text-align: left;\n  margin-bottom: 0px;\n  cursor: pointer;\n}\n\n.dropdown-button-drop {\n  border-bottom: 1px solid white;\n}\n\n.dropdown {\n  background-color: white;\n  border: 1px solid rgb(169, 169, 169);\n  position: absolute;\n\n  margin-left: 5px;\n  padding-left: 10px;\n  padding-top: 5px;\n  z-index: 4;\n}\n\n.dropdown ul {\n  margin: 0px;\n}\n\n.dropdown li {\n  line-height: 2.5em;\n  margin-bottom: -1px;\n  border-bottom: 1px solid rgb(169, 169, 169);\n  width: 90%;\n}\n\n.dropdown li:hover {\n  cursor: pointer;\n}\n</style>\n","<template>\n  <input\n    :class=\"{ 'base-input-undercover': undercover }\"\n    :style=\"{ width: this.width }\"\n    :value=\"value\"\n    @input=\"$emit('input', $event.target.value)\"\n  >\n</template>\n\n<script>\nexport default {\n  name: 'BaseInput',\n  props: {\n    value: {},\n    width: {\n      default: '',\n      type: String,\n      required: false,\n    },\n    undercover: Boolean,\n  },\n};\n</script>\n\n<style scoped>\ninput {\n  background-color: white;\n  border: 1px solid rgb(169, 169, 169);\n  color: black;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  font-family: inherit;\n  font-size: 1em;\n  text-align: left;\n\n  margin: 10px;\n  padding: 10px;\n  margin-left: 0px;\n}\n\n.base-input-undercover {\n  border: 1px solid white;\n  border-bottom: 1px solid rgb(169, 169, 169);\n}\n\n.base-input-undercover:focus {\n  border: 1px solid rgb(169, 169, 169);\n}\n\n.input:disabled {\n  color: gray;\n}\n</style>\n","<template>\n  <a\n    href=\"#\"\n    class=\"label\"\n    :class=\"{ selected: isSelected }\"\n    @click=\"$emit('followPath', path)\"\n  >\n    {{ label }}\n    <span class=\"action\" if=\"addition\"><br>{{ addition }}</span>\n  </a>\n</template>\n\n<script>\nexport default {\n  name: 'PolicyTreeNode',\n  props: {\n    label: {\n      type: String,\n      required: true,\n    },\n    addition: {\n      type: String,\n      required: false,\n    },\n    path: {\n      type: Array,\n      required: true,\n    },\n    selectedPath: {\n      type: Array,\n      required: true,\n    },\n  },\n  computed: {\n    isSelected() {\n      return this.path.join() === this.selectedPath.join();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.label {\n    display: block;\n    margin: 0px;\n    padding: 8px 0px;\n    cursor: pointer;\n\n    color: black;\n    font-weight: normal;\n    text-decoration: none;\n    border-top: 1px transparent solid;\n    border-bottom: 1px transparent solid;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n.label:hover:not(.selected) {\n    font-weight: bold;\n    color: #323232;\n}\n.subrules {\n    padding-left: 20px;\n}\n.label.selected {\n  color: #1f3b70;\n  font-weight: bold;\n  border-top: 1px #1f3b70 solid;\n  border-bottom: 1px #1f3b70 solid;\n}\n.action {\n  font-size: 15px;\n}\n.selected .action {\n  font-weight: normal;\n  font-style: italic;\n}\n</style>\n","<template>\n  <div class=\"tree\">\n    <PolicyTreeNode\n      :label=\"$i18n.t('license')\"\n      :path=\"[]\"\n      :selected-path=\"selectedPath\"\n      @followPath=\"$emit('followPath', $event)\"\n    />\n\n    <div v-if=\"policy['permission']\" class=\"rules\">\n      <PolicyTreeRuleItem\n        v-for=\"(permission, index) in policy['permission']\"\n        :key=\"index\"\n        :policy=\"policy\"\n        :path=\"['permission', index]\"\n        :selected-path=\"selectedPath\"\n        @followPath=\"$emit('followPath', $event)\"\n      />\n    </div>\n\n    <div v-if=\"policy['obligation']\" class=\"rules\">\n      <PolicyTreeRuleItem\n        v-for=\"(obligation, index) in policy['obligation']\"\n        :key=\"index\"\n        :policy=\"policy\"\n        :path=\"['obligation', index]\"\n        :selected-path=\"selectedPath\"\n        @followPath=\"$emit('followPath', $event)\"\n      />\n    </div>\n\n    <div v-if=\"policy['prohibition']\" class=\"rules\">\n      <PolicyTreeRuleItem\n        v-for=\"(prohibition, index) in policy['prohibition']\"\n        :key=\"index\"\n        :policy=\"policy\"\n        :path=\"['prohibition', index]\"\n        :selected-path=\"selectedPath\"\n        @followPath=\"$emit('followPath', $event)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport PolicyTreeRuleItem from './PolicyTreeRuleItem.vue';\nimport PolicyTreeNode from './PolicyTreeNode.vue';\n\nexport default {\n  name: 'PolicyTree',\n  components: {\n    PolicyTreeRuleItem,\n    PolicyTreeNode,\n  },\n  props: {\n    policy: {\n      type: Object,\n      required: true,\n    },\n    selectedPath: {\n      type: Array,\n      required: true,\n    },\n  },\n};\n</script>\n\n<style scoped>\n.rules {\n    padding-left: 20px;\n}\n</style>\n","<template>\n  <transition name=\"modal\">\n    <div class=\"modal-mask\">\n      <div class=\"modal-wrapper\">\n        <div\n          :style=\"{ width: this.width }\"\n          class=\"modal-container\"\n        >\n          <div class=\"modal-header\">\n            <slot name=\"header\" />\n          </div>\n\n          <div\n            :class=\"{ 'base-modal-scrollable': scrollable }\"\n            class=\"modal-body\"\n          >\n            <slot name=\"body\">\n              default body\n            </slot>\n          </div>\n\n          <div class=\"modal-footer\">\n            <slot name=\"footer\">\n              default footer\n              <button class=\"modal-default-button\">\n                OK\n              </button>\n            </slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nexport default {\n  name: 'BaseModal',\n  props: {\n    width: {\n      default: '600px',\n      type: String,\n      required: false,\n    },\n    scrollable: {\n      default: true,\n      type: Boolean,\n      required: false,\n    },\n  },\n  created() {\n    document.body.style.overflow = 'hidden';\n  },\n  destroyed() {\n    document.body.style.overflow = 'auto';\n  },\n};\n</script>\n\n<style scoped>\n.modal-mask {\n  position: fixed;\n  z-index: 9998;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: table;\n  transition: opacity 0.25s ease;\n}\n\n.modal-wrapper {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.modal-container {\n  margin: 0px auto;\n  padding: 20px 30px;\n  background-color: #fff;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\n  transition: all 0.25s ease;\n}\n\n.base-modal-scrollable {\n  overflow-y: scroll !important;\n}\n\n.modal-body {\n  margin: 20px 0;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  height: 250px;\n  max-height: 250px;\n}\n\n.modal-default-button {\n  float: right;\n}\n\n/*\n * The following styles are auto-applied to elements with\n * transition=\"modal\" when their visibility is toggled\n * by Vue.js.\n *\n * You can easily play with the modal transition by editing\n * these styles.\n */\n\n.modal-enter {\n  opacity: 0;\n}\n\n.modal-leave-active {\n  opacity: 0;\n}\n\n.modal-enter .modal-container,\n.modal-leave-active .modal-container {\n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n\n/* The following style creates a custom scroll bar\n * for the modal to fit better into our custom ui design\n*/\n\n::-webkit-scrollbar {\n  width: 10px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #999;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #777;\n}\n</style>\n","<template>\n  <BaseModal>\n    <template v-slot:header>\n      <h1>{{ $t('actionChooserHeader') }}</h1>\n    </template>\n    <template v-slot:body>\n      <ul class=\"actions-list\">\n        <li\n          v-for=\"(action, index) in actions\"\n          :key=\"index\"\n          :class=\"{selected: currentSelected === index}\"\n          @click=\"actionClicked(index)\"\n        >\n          {{ $t(action) }}\n        </li>\n      </ul>\n    </template>\n    <template v-slot:footer>\n      <div class=\"modal-footer\">\n        <BaseButton textlike @click=\"abort\">\n          {{ $t('cancel') }}\n        </BaseButton>\n        <BaseButton :disabled=\"currentAction == ''\" @click=\"chosen($event)\">\n          {{ $t('accept') }}\n        </BaseButton>\n      </div>\n    </template>\n  </BaseModal>\n</template>\n\n<script>\nimport BaseButton from './BaseComponents/BaseButton.vue';\nimport BaseModal from './BaseComponents/BaseModal.vue';\nimport { actionList } from '../libs/odrl/actions.js';\n\nexport default {\n  name: 'ActionChooser',\n  components: {\n    BaseButton,\n    BaseModal,\n  },\n  data() {\n    return {\n      currentSelected: null,\n      currentAction: '',\n    };\n  },\n  computed: {\n    lang() {\n      return this.$i18n.locale;\n    },\n    actions() {\n      return actionList;\n    },\n  },\n  methods: {\n    actionClicked(actionId) {\n      this.currentAction = this.actions[actionId];\n      this.currentSelected = actionId;\n    },\n    abort() {\n      this.$emit('abort');\n    },\n    chosen(action) {\n      this.$emit('chosen', this.currentAction);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.actions-list {\n  margin: 0px;\n  padding: 0px;\n}\n.actions-list li {\n  padding: 0.5em;\n  border-bottom: 1px lightgray solid;\n  cursor: default;\n}\n.actions-list li:hover {\n  background-color: rgb(238, 238, 238);\n  cursor: pointer;\n}\n.actions-list .selected {\n  background-color: rgb(218, 218, 218);\n}\n.actions-list .selected:hover {\n  background-color: rgb(218, 218, 218);\n}\n\n.modal-footer {\n  text-align: right;\n}\n\n</style>\n","<template>\n  <div class=\"action-container\">\n    <ActionChooser\n      v-if=\"displayActionChooser\"\n      @chosen=\"chosen($event)\"\n      @abort=\"aborted()\"\n    />\n\n    <!-- display and edit action -->\n    <BaseButton\n      input\n      list=\"actions\"\n      name=\"action\"\n      type=\"button\"\n      @click=\"showActionChooser()\"\n    >\n      {{ actionLabel }}\n    </BaseButton>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport BaseButton from './BaseComponents/BaseButton.vue';\nimport ActionChooser from './ActionChooser.vue';\nimport { actionList } from '../libs/odrl/actions.js';\n\nexport default {\n  name: 'ActionItem',\n  components: {\n    ActionChooser,\n    BaseButton,\n  },\n  props: {\n    policy: {\n      type: Object,\n      required: true,\n    },\n    path: {\n      type: Array,\n      required: true,\n    },\n    removeCallback: {\n      type: Function,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      actionChooserShouldDisplay: false,\n    };\n  },\n  computed: {\n    lang() {\n      return this.$i18n.locale;\n    },\n    placeholder() {\n      return this.$i18n.t('placeholder');\n    },\n    rule() {\n      const rulePath = this.path.slice(0, this.path.length - 1);\n      return this.policy.follow(rulePath);\n    },\n    action: {\n      get() {\n        if (!this.rule.action) {\n          Vue.set(this.rule, 'action', this.placeholder);\n        }\n        if (Array.isArray(this.rule.action)) {\n          return this.rule.action[0]['rdf:value'];\n        }\n        return this.rule.action;\n      },\n      set(newAction) {\n        this.rule.action = newAction;\n      },\n    },\n    actionLabel() {\n      if (this.action && this.action != this.placeholder) {\n        return this.$i18n.t(actionList.find(item => item === this.action));\n      }\n      return this.placeholder;\n    },\n    displayActionChooser() {\n      return this.actionChooserShouldDisplay || this.rule.action === this.placeholder;\n    },\n  },\n  methods: {\n    showActionChooser() {\n      this.actionChooserShouldDisplay = true;\n    },\n    hideActionChooser() {\n      this.actionChooserShouldDisplay = false;\n    },\n    chosen(action) {\n      this.hideActionChooser();\n      this.action = action;\n    },\n    aborted() {\n      if (this.rule.action === this.placeholder) {\n        this.removeCallback();\n      } else {\n        this.hideActionChooser();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.action-container {\n  display: inline;\n}\n</style>\n","<template>\n  <BaseModal :width=\"'1000px'\" :scrollable=\"false\">\n    <template v-slot:header>\n\n      <h1 v-if=\"objectToEdit == null\">\n        {{ addObjectHeader }}\n      </h1>\n      <h1 v-else>\n        {{ editObjectHeader }}\n      </h1>\n    </template>\n\n    <template v-slot:body>\n      <ul class=\"list\">\n        <li\n          v-for=\"(op, index) in operands\"\n          :key=\"index\"\n          :class=\"{ selected: leftOperand === op }\"\n          @click=\"leftOperand = op\"\n        >{{ $t(op) }}</li>\n      </ul>\n      <ul class=\"list\">\n        <li\n          v-for=\"(op, index) in operators\"\n          :key=\"index\"\n          :class=\"{ selected: operator === op.identifier }\"\n          @click=\"operator = op.identifier\"\n        >{{ op.symbol }}</li>\n      </ul>\n      <div class=\"value-container\">\n        <!-- input is number with unit -->\n        <div v-if=\"isNumericInput\" class=\"numeric-input-container\">\n          <div class=\"number-container\">\n            <div class=\"numeric-input-header\">Zahl:</div>\n            <br>\n            <BaseInput\n              class=\"number-input flat-input\"\n              type=\"number\"\n              :value=\"value\"\n              @input=\"value = $event\"\n            />\n          </div>\n          <div class=\"unit-container\">\n            <div class=\"numeric-input-header\">Einheit:</div>\n            <br>\n            <ul class=\"unit-list list\" type=\"text\" name=\"unit\">\n              <li\n                v-for=\"(u, index) in units\"\n                :key=\"index\"\n                :class=\"{ selected: unit === u }\"\n                @click=\"unit = u\"\n              >{{ $t(u) }}</li>\n            </ul>\n          </div>\n        </div>\n        <!-- input is selection from list -->\n        <ul v-if=\"isListInput\" class=\"value-list list\">\n          <li\n            v-for=\"(item, index) in listItems\"\n            :key=\"index\"\n            :class=\"{ selected: rightOperand.indexOf(item) >= 0 }\"\n            @click=\"toggleRightOperand(item)\"\n          >{{ $t(item) }}</li>\n        </ul>\n      </div>\n    </template>\n\n    <template v-slot:footer>\n      <div class=\"modal-footer\">\n        <BaseButton\n          textlike\n          @click=\"$emit('abort');\"\n        >{{ $t('cancel') }}</BaseButton>\n        <BaseButton :disabled=\"!complete()\" @click=\"accept()\">{{ $t(\"accept\") }}</BaseButton>\n      </div>\n    </template>\n  </BaseModal>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport BaseInput from './BaseComponents/BaseInput.vue';\nimport BaseModal from './BaseComponents/BaseModal.vue';\nimport BaseButton from './BaseComponents/BaseButton.vue';\n\nexport default {\n  name: 'ConstraintChooser',\n  components: {\n    BaseInput,\n    BaseModal,\n    BaseButton,\n  },\n  props: {\n    objectToEdit: {\n      type: Object,\n      default: null,\n      required: false,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    operandList: {\n      type: Array,\n      required: true,\n    },\n    operandMapping: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      objectCopy: null,\n      forceUpdate: 0,\n    };\n  },\n  computed: {\n    lang() {\n      return this.$i18n.locale;\n    },\n    addObjectHeader() {\n      return this.$i18n.t(`${this.name}.add`);\n    },\n    editObjectHeader() {\n      return this.$i18n.t(`${this.name}.edit`);\n    },\n    operands() {\n      return this.operandList;\n    },\n    object() {\n      if (this.objectCopy) {\n        // the object copy has already been initialized correctly\n        return this.objectCopy;\n      }\n      if (!this.objectToEdit) {\n        // new empty object is going to be filled\n        this.objectCopy = {};\n        return this.objectCopy;\n      }\n      // deep copy the v-bound object that is going to be edited\n      this.objectCopy = {};\n      Vue.set(this.objectCopy, 'leftOperand', this.objectToEdit.leftOperand);\n      Vue.set(this.objectCopy, 'operator', this.objectToEdit.operator);\n\n      if (Array.isArray(this.objectToEdit.rightOperand)) {\n        // right operand is a selection from list\n        Vue.set(this.objectCopy, 'rightOperand', [\n          ...this.objectToEdit.rightOperand,\n        ]);\n      } else {\n        // right operand is number and unit\n        Vue.set(this.objectCopy, 'rightOperand', {\n          '@value': this.objectToEdit.rightOperand['@value'],\n        });\n        Vue.set(this.objectCopy, 'unit', this.objectToEdit.unit);\n      }\n\n      Vue.delete(this.objectCopy, 'uninitialized');\n      return this.objectCopy;\n    },\n    leftOperand: {\n      get() {\n        const operand = this.object.leftOperand;\n        if (!operand) {\n          this.leftOperand = this.operands[0];\n          return this.leftOperand;\n        }\n        return operand;\n      },\n      set(op) {\n        if (this.object.leftOperand === op) {\n          // do nothing\n          return;\n        }\n        Vue.set(this.object, 'leftOperand', op);\n        Vue.delete(this.object, 'operator');\n        Vue.delete(this.object, 'rightOperand');\n        Vue.delete(this.object, 'unit');\n      },\n    },\n    operator: {\n      get() {\n        if (this.operators.length === 1) {\n          this.operator = this.operators[0].identifier;\n        }\n        return this.object.operator;\n      },\n      set(op) {\n        Vue.set(this.object, 'operator', op);\n      },\n    },\n    rightOperand: {\n      get() {\n        const operand = this.object.rightOperand;\n        return operand || [];\n      },\n      set(op) {\n        op.sort();\n        Vue.set(this.object, 'rightOperand', op);\n      },\n    },\n    value: {\n      get() {\n        const op = this.object.rightOperand;\n        if (!op && this.isNumericInput) {\n          Vue.set(this.object, 'rightOperand', { '@value': '0' });\n        }\n        return this.object.rightOperand['@value'];\n      },\n      set(val) {\n        this.object.rightOperand['@value'] = val;\n      },\n    },\n    unit: {\n      get() {\n        if (this.units.length === 1) {\n          this.unit = this.units[0];\n        }\n        return this.object.unit;\n      },\n      set(u) {\n        Vue.set(this.object, 'unit', u);\n      },\n    },\n    operators() {\n      return this.operandMapping[this.leftOperand].operators;\n    },\n    units() {\n      return this.operandMapping[this.leftOperand].units;\n    },\n    listItems() {\n      return this.operandMapping[this.leftOperand].list;\n    },\n    isNumericInput() {\n      return !!this.operandMapping[this.leftOperand].units;\n    },\n    isListInput() {\n      return !!this.operandMapping[this.leftOperand].list;\n    },\n  },\n  methods: {\n    complete() {\n      const hasLeftOperand = !!this.object.leftOperand;\n      const hasOperator = !!this.object.operator;\n      const hasRightOperand = !!this.object.rightOperand;\n      const hasUnitIfNumeric = !this.isNumericInput || !!this.object.unit;\n\n      return (\n        hasLeftOperand && hasOperator && hasRightOperand && hasUnitIfNumeric\n      );\n    },\n    accept() {\n      if (this.complete()) {\n        this.$emit('chosen', this.object);\n      }\n    },\n    toggleRightOperand(op) {\n      const idx = this.rightOperand.indexOf(op);\n      if (idx >= 0) {\n        this.rightOperand.splice(idx, 1);\n\n        if (this.rightOperand.length === 0) {\n          Vue.delete(this.object, 'rightOperand');\n        }\n        return;\n      }\n\n      this.rightOperand = [...this.rightOperand, op];\n    },\n  },\n};\n</script>\n\n<style scoped>\n.list {\n  float: left;\n  margin: 0px 10px;\n  padding: 0px;\n  font-size: 16px;\n  width: 300px;\n  height: 250px;\n  overflow-y: auto;\n}\n.list li {\n  padding: 0.5em;\n  border-bottom: 1px lightgray solid;\n  cursor: default;\n}\n.list li:hover {\n  background-color: rgb(238, 238, 238);\n  cursor: pointer;\n}\n.list .selected {\n  background-color: rgb(218, 218, 218);\n}\n.list .selected:hover {\n  background-color: rgb(218, 218, 218);\n}\n\n.value-container {\n  float: left;\n}\n\n.value-list {\n  overflow-y: scroll;\n  height: 250px;\n  width: 335px;\n}\n\n.numeric-input-container {\n  width: 335px;\n  overflow: hidden;\n}\n\n.number-container {\n  float: left;\n  width: calc(50% - 20px);\n  margin-left: 20px;\n}\n\n.number-input {\n  width: 70%;\n}\n\n.unit-container {\n  width: 50%;\n  float: left;\n}\n\n.unit-list {\n  margin-top: 10px;\n  margin-left: 0px;\n}\n\n.numeric-input-header {\n  border-bottom: 1px solid #999;\n}\n\n.modal-footer {\n  margin-top: 50px;\n  text-align: right;\n}\n\n/* changing data that is technically a visible part of the component but hidden using CSS styling allows for easily forcing a component rerender */\n.hidden {\n  display: none;\n}\n\n/* custom scroll bar */\n::-webkit-scrollbar {\n  width: 10px;\n}\n::-webkit-scrollbar-track {\n  background-color: rgb(218, 218, 218);\n}\n::-webkit-scrollbar-thumb {\n  background: #999;\n}\n::-webkit-scrollbar-thumb:hover {\n  background: #777;\n}\n</style>\n","<template>\n  <div>\n    <ConstraintChooser\n      v-if=\"displayConstraintChooser\"\n      :object-to-edit=\"constraint\"\n      name=\"constraint\"\n      :operand-list=\"opList\"\n      :operand-mapping=\"opMapping\"\n      @chosen=\"hideConstraintChooser(); constraint = $event\"\n      @abort=\"abortChooser()\"\n    />\n\n    <div class=\"constraint-container\">\n      <BaseButton\n        input\n        :width=\"'90%'\"\n        class=\"edit-constraint\"\n        name=\"constraint\"\n        type=\"button\"\n        @click=\"showConstraintChooser()\"\n      >\n        {{ description }}\n      </BaseButton>\n      <BaseButton class=\"remove-constraint\" remove @click=\"removeConstraint()\">\n        <i class=\"fas fa-times\" />\n      </BaseButton>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport BaseButton from './BaseComponents/BaseButton.vue';\nimport ConstraintChooser from './ConstraintChooser.vue';\nimport {\n  constraintOnlyOperandList,\n  operandMapping,\n  operatorList,\n  unitList,\n} from '../libs/odrl/constraints';\n\n\nexport default {\n  name: 'ConstraintItem',\n  components: {\n    ConstraintChooser,\n    BaseButton,\n  },\n  props: {\n    policy: {\n      type: Object,\n      required: true,\n    },\n    path: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      constraintChooserShouldDisplay: false,\n    };\n  },\n  computed: {\n    lang() {\n      return this.$i18n.locale;\n    },\n    constraint: {\n      get() {\n        return this.policy.follow(this.path);\n      },\n      set(newConstraint) {\n        Vue.set(this.constraintParent, this.path[this.path.length - 1], newConstraint);\n      },\n    },\n    constraintParent() {\n      const pathWithoutLastElement = this.path.slice(0, this.path.length - 1);\n      return this.policy.follow(pathWithoutLastElement);\n    },\n    displayConstraintChooser() {\n      return this.constraintChooserShouldDisplay || !this.constraint;\n    },\n    description() {\n      if (!this.constraint) {\n        return this.$i18n.t('placeholder');\n      }\n\n      let desc = ` ${this.$i18n.t(this.constraint.leftOperand)}`;\n      desc += ` ${operatorList.find(op => (op.identifier === this.constraint.operator)).symbol}`;\n\n      const rOperand = this.constraint.rightOperand;\n      if (Array.isArray(rOperand)) {\n        rOperand.forEach((item) => { desc += ` ${this.$i18n.t(item)}, `; });\n        desc = desc.substr(0, desc.length - 2); // removes the last comma\n      } else {\n        desc += ` ${rOperand['@value']}`;\n        desc += ` ${this.$i18n.t(this.constraint.unit)}`;\n      }\n      return desc;\n    },\n    opList() {\n      return constraintOnlyOperandList;\n    },\n    opMapping() {\n      return operandMapping;\n    },\n  },\n  methods: {\n    abortChooser() {\n      this.hideConstraintChooser();\n      const c = this.path.reduce(\n        (result, segment) => result[segment],\n        this.policy,\n      );\n      if (!c) {\n        this.removeConstraint();\n      }\n    },\n    showConstraintChooser() {\n      this.constraintChooserShouldDisplay = true;\n    },\n    hideConstraintChooser() {\n      this.constraintChooserShouldDisplay = false;\n    },\n    removeConstraint() {\n      const removeIndex = this.path[this.path.length - 1];\n      Vue.delete(this.constraintParent, removeIndex);\n\n      if (this.constraintParent.length === 1) {\n        // go from list with logical operator\n        // back to just one constraint within the array\n        const constraint = this.constraintParent[0];\n        const rulePath = this.path.slice(0, this.path.length - 4);\n        Vue.set(this.policy.follow(rulePath), 'constraint', [constraint]);\n        return;\n      }\n\n      if (this.constraintParent.length === 0) {\n        const parentsParent = this.path\n          .slice(0, this.path.length - 2)\n          .reduce((result, segment) => result[segment], this.policy);\n        Vue.delete(parentsParent, this.path[this.path.length - 2]);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.constraint-container {\n  position: relative;\n}\n\n.edit-constraint {\n  margin: 0px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  max-width: 500px;\n}\n\n.remove-constraint {\n  position: absolute;\n  top: calc(50% - 18px);\n}\n</style>\n","<template>\n  <div>\n    <ConstraintChooser\n      v-if=\"displayRefinementChooser\"\n      :object-to-edit=\"refinement\"\n      name=\"refinement\"\n      :operand-list=\"opList\"\n      :operand-mapping=\"opMapping\"\n      @chosen=\"hideRefinementChooser(); refinement = $event\"\n      @abort=\"abortChooser()\"\n    />\n    <div class=\"refinement-container\">\n      <BaseButton\n        input\n        :width=\"'90%'\"\n        class=\"edit-refinement\"\n        name=\"refinement\"\n        type=\"button\"\n        @click=\"showRefinementChooser()\"\n      >\n        {{ description }}\n      </BaseButton>\n      <BaseButton class=\"remove-refinement\" remove @click=\"removeRefinement()\">\n        <i class=\"fas fa-times\" />\n      </BaseButton>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport ConstraintChooser from './ConstraintChooser.vue';\nimport BaseButton from './BaseComponents/BaseButton.vue';\nimport {\n  operandMapping,\n  operatorList,\n  actionToRefinements,\n  unitList,\n} from '../libs/odrl/constraints.js';\n\nexport default {\n  name: 'RefinementItem',\n  components: {\n    ConstraintChooser,\n    BaseButton,\n  },\n  props: {\n    policy: {\n      type: Object,\n      required: true,\n    },\n    path: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      refinementChooserShouldDisplay: false,\n    };\n  },\n  computed: {\n    lang() {\n      return this.$i18n.locale;\n    },\n    refinement: {\n      get() {\n        return this.policy.follow(this.path);\n      },\n      set(newRefinement) {\n        Vue.set(this.refinementParent, this.path[this.path.length - 1], newRefinement);\n      },\n    },\n    refinementParent() {\n      const pathWithoutLastElement = this.path.slice(0, this.path.length - 1);\n      return this.policy.follow(pathWithoutLastElement);\n    },\n    isOneOfManyRefinements() {\n      return this.refinementParent.length > 1;\n    },\n    actionLabel() {\n      let actionPath;\n\n      if (this.isOneOfManyRefinements) {\n        actionPath = this.path.slice(0, this.path.length - 4);\n      } else {\n        actionPath = this.path.slice(0, this.path.length - 2);\n      }\n\n      return this.policy.follow(actionPath)['rdf:value'];\n    },\n    displayRefinementChooser() {\n      return this.refinementChooserShouldDisplay || !this.refinement;\n    },\n    description() {\n      if (!this.refinement) {\n        return this.$i18n.t('placeholder');\n      }\n\n      let desc = ` ${this.$i18n.t(this.refinement.leftOperand)}`;\n      desc += ` ${operatorList.find(op => (op.identifier === this.refinement.operator)).symbol}`;\n\n      const rOperand = this.refinement.rightOperand;\n      if (Array.isArray(rOperand)) {\n        rOperand.forEach((item) => { desc += ` ${this.$i18n.t(item)}, `; });\n        desc = desc.substr(0, desc.length - 2); // removes the last comma\n      } else {\n        desc += ` ${rOperand['@value']}`;\n        desc += ` ${this.$i18n.t(this.refinement.unit)}`;\n      }\n      return desc;\n    },\n    opList() {\n      // every action needs a different set of possible refinements\n      return actionToRefinements[this.actionLabel].operands;\n    },\n    opMapping() {\n      return operandMapping;\n    },\n  },\n  methods: {\n    abortChooser() {\n      this.hideRefinementChooser();\n      const c = this.path.reduce(\n        (result, segment) => result[segment],\n        this.policy,\n      );\n      if (!c) {\n        this.removeRefinement();\n      }\n    },\n    showRefinementChooser() {\n      this.refinementChooserShouldDisplay = true;\n    },\n    hideRefinementChooser() {\n      this.refinementChooserShouldDisplay = false;\n    },\n    removeRefinement() {\n      const index = this.path[this.path.length - 1];\n      Vue.delete(this.refinementParent, index); // index of the current refinement\n\n      if (this.refinementParent.length === 1) {\n        // go from list with logical operator\n        // back to just one refinement within the array\n        const refinement = this.refinementParent[0];\n        const actionPath = this.path.slice(0, this.path.length - 4);\n        Vue.set(this.policy.follow(actionPath), 'refinement', [refinement]);\n        return;\n      }\n\n      if (this.refinementParent.length === 0) {\n        // if no refinements are left, make the action just a string again\n        const rulePath = this.path.slice(0, this.path.length - 4);\n        const ruleObject = this.policy.follow(rulePath);\n        const action = ruleObject.action[0]['rdf:value'];\n        ruleObject.action = action;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.refinement-container {\n  position: relative;\n}\n\n.edit-refinement {\n  margin: 0px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  max-width: 500px;\n}\n\n.remove-refinement {\n  position: absolute;\n  top: calc(50% - 18px);\n}\n</style>\n","<template>\n  <div class=\"rule-container\">\n    <div class=\"rule-header\">\n      <h3>{{ ruleLanguageInfo.name }} <i :class=\"ruleInfo.icon\" /></h3>\n      <BaseButton\n        remove\n        class=\"remove-button\"\n        :title=\"removeRuleText\"\n        @click=\"removeRule()\"\n      >\n        <i class=\"far fa-trash-alt\" />\n      </BaseButton>\n    </div>\n\n    <!-- display action -->\n    <p class=\"actions\">\n      <!-- main explanation -->\n      <EmbedInText :text-ahead=\"$i18n.t('textAheadOfActionLabel')\" :text-after=\"ruleLanguageInfo.description\">\n        <ActionItem :policy=\"policy\" :path=\"[...path, 'action']\" :remove-callback=\"removeRule\" />\n      </EmbedInText>\n      <!-- additional explanation -->\n      <EmbedInText v-if=\"ruleInfo.hasParentRule\" :text-ahead=\"ruleLanguageInfo.descriptionExtension[0]\" :text-after=\"ruleLanguageInfo.descriptionExtension[1]\">\n        {{ article[parentRuleInfo.gender].definite }}\n        <a href=\"#\" @click=\"$emit('followLink', path.slice(0, path.length - 2))\">{{ parentRuleLanguageInfo.name }}</a>\n      </EmbedInText>\n    </p>\n\n    <!-- display and edit refinements -->\n    <p class=\"refinements\">\n      {{ $t('textAheadOfActionLabel') }}\n      <em>{{ actionLabel }}</em>\n      {{ $t('refinementTextAfterActionLabel') }}\n      <em v-if=\"isLogicalRefinement && logicalRefinementOperator == 'xone'\">\n        {{ $t('either') }}\n      </em>\n    </p>\n\n    <ul>\n      <li v-for=\"(refinement, index) in refinements\" :key=\"index\">\n        <RefinementItem :policy=\"policy\" :path=\"[...refinementPath, index]\" />\n        <BaseButton\n          v-if=\"isLogicalRefinement && index < refinements.length - 1\"\n          textlike\n          class=\"logical-operator\"\n          @click=\"nextLogicalRefinementOperator()\"\n        >\n          {{ $t(logicalRefinementOperator) }}\n        </BaseButton>\n      </li>\n    </ul>\n\n    <!-- add new refinement -->\n    <BaseButton class=\"add-button\" @click=\"addRefinement()\">\n      {{ $t('refinement.add') }}\n    </BaseButton>\n\n    <!-- display and edit constraints -->\n    <p class=\"constraints\">\n      {{ $t('constraintTextAheadOfRuleName') }}\n      {{ article[ruleInfo.gender].definite }}\n      <em>{{ ruleLanguageInfo.name }}</em>\n      {{ $t('constraintTextAfterRuleName') }}\n      <em v-if=\"isLogicalConstraint && logicalConstraintOperator == 'xone'\">\n        {{ $t('either') }}\n      </em>\n    </p>\n\n    <ul>\n      <li v-for=\"(constraint, index) in constraints\" :key=\"index\">\n        <ConstraintItem :policy=\"policy\" :path=\"[...constraintPath, index]\" />\n        <BaseButton\n          v-if=\"isLogicalConstraint && index < constraints.length - 1\"\n          textlike\n          class=\"logical-operator\"\n          @click=\"nextLogicalConstraintOperator()\"\n        >\n          {{ $t(logicalConstraintOperator) }}\n        </BaseButton>\n      </li>\n    </ul>\n\n    <!-- add new constraint -->\n    <BaseButton class=\"add-button\" @click=\"addConstraint()\">\n      {{ $t('constraint.add') }}\n    </BaseButton>\n\n    <!-- add subrules -->\n    <div v-if=\"canHaveSubrules\" class=\"subrule-container\">\n\n      {{ $t('subRuleText') }}\n      <p>\n        <BaseButton class=\"add-button\" :name=\"subruleLanguageInfo.pluralName\" @click=\"appendNewSubrule\">\n          {{ subruleLanguageInfo.name }}\n        </BaseButton>\n\n        {{ subruleLanguageInfo.pluralName }}\n        {{ $t('subRuleDescription') }}\n        <EmbedInText :text-ahead=\"subruleLanguageInfo.descriptionExtension[0]\" :text-after=\"subruleLanguageInfo.descriptionExtension[1]\">\n          {{ article[ruleInfo.gender].definite }} <em>{{ ruleLanguageInfo.name }}</em>\n        </EmbedInText>\n      </P>\n\n      <!-- list all available subrules -->\n      <p v-if=\"subrules\">\n        {{ subruleNameArticle }}\n        {{ $tc(subruleDynamicName, subrules.length) }}\n\n        <!-- this is still kind of ugly\n        @Ivan: do better! -->\n        <template v-if=\"lang == 'de'\">diese{{ ruleInfo.gender === 'f' ? 'r' : 's' }} {{ ruleLanguageInfo.name }}{{ ruleInfo.gender === 'f' ? '' : 's' }}</template>\n        <template v-if=\"lang == 'en'\">of this {{ ruleLanguageInfo.name }}</template>\n        {{ $tc('is_are', subrules.length) }}:<br>\n        <!-- this is still kind of ugly -->\n\n        <span v-for=\"(subrule, index) in subrules\" :key=\"index\">\n          <a href=\"#\" @click=\"$emit('followLink', [...path, ruleInfo.subrule, index])\">{{ getSubruleActionLabel(subrule) }}</a>\n          <span v-if=\"index + 1 < subrules.length\">, <br></span>\n        </span>\n      </p>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport EmbedInText from './EmbedInText.vue';\nimport BaseButton from './BaseComponents/BaseButton.vue';\nimport ActionItem from './ActionItem.vue';\nimport ConstraintItem from './ConstraintItem.vue';\nimport RefinementItem from './RefinementItem.vue';\nimport { RuleTypes } from '../libs/odrl/rules.js';\nimport { capitalize } from '../libs/language/language.js';\nimport { actionList } from '../libs/odrl/actions.js';\nimport { logicalOperatorList } from '../libs/odrl/constraints.js';\n\nexport default {\n  name: 'RuleItem',\n  components: {\n    EmbedInText,\n    ConstraintItem,\n    BaseButton,\n    ActionItem,\n    RefinementItem,\n  },\n  props: {\n    policy: {\n      type: Object,\n      required: true,\n    },\n    path: {\n      type: Array,\n      required: true,\n    },\n  },\n  computed: {\n    lang() {\n      return this.$i18n.locale;\n    },\n    placeholder() {\n      return this.$i18n.t('placeholder');\n    },\n    subruleNameArticle() {\n      return capitalize(this.article[this.subruleInfo.gender].definite);\n    },\n    rule() {\n      return this.policy.follow(this.path);\n    },\n    ruleTypeName() {\n      return this.path[this.path.length - 2];\n    },\n    ruleInfo() {\n      return RuleTypes[this.ruleTypeName];\n    },\n    ruleLanguageInfo() {\n      return this.$i18n.t('rule')[this.ruleTypeName];\n    },\n    removeRuleText() {\n      return this.$i18n.t('removeRule');\n    },\n    subruleTypeName() {\n      return this.ruleInfo.subrule;\n    },\n    subruleInfo() {\n      return RuleTypes[this.subruleTypeName];\n    },\n    subruleLanguageInfo() {\n      return this.$i18n.t('rule')[this.ruleInfo.subrule];\n    },\n    subruleDynamicName() {\n      return `rule.${this.subruleTypeName}.dynamicName`;\n    },\n    parentRuleTypeName() {\n      if (this.ruleInfo.hasParentRule) {\n        return this.path[this.path.length - 4];\n      }\n    },\n    parentRuleInfo() {\n      if (!this.ruleInfo.hasParentRule) {\n        console.error('has no parent');\n        return null;\n      }\n      return RuleTypes[this.parentRuleTypeName];\n    },\n    parentRuleLanguageInfo() {\n      return this.$i18n.t('rule')[this.parentRuleTypeName];\n    },\n    canHaveSubrules() {\n      return this.ruleInfo.subrule !== '';\n    },\n    subrules() {\n      return this.rule[this.subruleTypeName];\n    },\n    hasParentRule() {\n      return !!this.parentRuleInfo;\n    },\n    action() {\n      return this.rule.action;\n    },\n    actionString() {\n      return Array.isArray(this.action) ? this.action[0]['rdf:value'] : this.action;\n    },\n    actionLabel() {\n      if (this.actionString && this.actionString != this.placeholder) {\n        return this.$i18n.t(actionList.find(item => item === this.actionString));\n      }\n      return this.placeholder;\n    },\n    constraints() {\n      if (!this.rule.constraint) {\n        return null;\n      }\n      if (this.isLogicalConstraint) {\n        return this.rule.constraint[this.logicalConstraintOperator]['@list'];\n      }\n      return this.rule.constraint;\n    },\n    isLogicalConstraint() {\n      // if rule.constraint is an array, that means that only one refinement has been added\n      // otherwise rule.refinement is an object containting a logical operator, which is an object containing a list, which is an array containting more than one refinement instances\n      return !Array.isArray(this.rule.constraint);\n    },\n    constraintPath() {\n      if (this.isLogicalConstraint) {\n        return [...this.path, 'constraint', this.logicalConstraintOperator, '@list'];\n      }\n      return [...this.path, 'constraint'];\n    },\n    refinements() {\n      if (!this.action) {\n        return null;\n      }\n      if (!Array.isArray(this.action)) {\n        return null;\n      }\n      if (this.isLogicalRefinement) {\n        return this.action[0].refinement[this.logicalRefinementOperator]['@list'];\n      }\n      return this.action[0].refinement;\n    },\n    isLogicalRefinement() {\n      if (!this.action || !Array.isArray(this.action)) {\n        return false;\n      }\n\n      // again, there is more than one refinement instance within the policy if the refinement is an object containing a logical operator and so on...\n      return !Array.isArray(this.action[0].refinement);\n    },\n    refinementPath() {\n      if (this.refinements) {\n        if (this.refinements.length <= 1) {\n          return [...this.path, 'action', 0, 'refinement'];\n        }\n        return [...this.path, 'action', 0, 'refinement', this.logicalRefinementOperator, '@list'];\n      }\n    },\n    article() {\n      return this.$i18n.t('article');\n    },\n    logicalConstraintOperator() {\n      if (!this.rule.constraint) {\n        return null;\n      }\n\n      const op = Object.keys(this.rule.constraint)[0];\n      if (op == undefined) {\n        return logicalOperatorList[0];\n      }\n      return op;\n    },\n    logicalRefinementOperator() {\n      if (!this.action[0].refinement) {\n        return null;\n      }\n\n      const op = Object.keys(this.action[0].refinement)[0];\n      if (op == undefined) {\n        return logicalOperatorList[0];\n      }\n      return op;\n    },\n  },\n  methods: {\n\n    // rules\n    appendNewSubrule() {\n      if (!this.rule[this.subruleTypeName]) {\n        Vue.set(this.rule, this.subruleTypeName, []);\n      }\n      const subrules = this.rule[this.subruleTypeName];\n      const idx = subrules.length;\n      Vue.set(subrules, idx, {});\n      this.$emit('followLink', [...this.path, this.subruleTypeName, idx]);\n    },\n    removeRule() {\n      const containerPath = this.path.slice(0, this.path.length - 1);\n      const ruleContainer = this.policy.follow(containerPath);\n      const idx = this.path[this.path.length - 1];\n      ruleContainer.splice(idx, 1);\n      if (ruleContainer.length > 0) {\n        const redirectIdx = idx >= ruleContainer.length ? ruleContainer.length - 1 : idx;\n        this.$emit('followLink', [...containerPath, redirectIdx]);\n        return;\n      }\n\n      // If the array containing the rule is empty due to deleting the\n      // last rule it contained, we also delete the array.\n      const parentPath = containerPath.slice(0, containerPath.length - 1);\n      const ruleParent = this.policy.follow(parentPath);\n      const containerName = containerPath[containerPath.length - 1];\n      Vue.delete(ruleParent, containerName);\n      this.$emit('followLink', parentPath);\n    },\n    getSubruleActionLabel(subrule) {\n      if (Array.isArray(subrule.action)) {\n        return this.$i18n.t(actionList.find(item => item === subrule.action[0]['rdf:value']));\n      }\n      return this.$i18n.t(actionList.find(item => item === subrule.action));\n    },\n\n    // constraints\n    addConstraint() {\n      if (!this.constraints) {\n        Vue.set(this.rule, 'constraint', []);\n      }\n\n      // make use of the logical operator to combine more than one constraint\n      if (this.constraints.length == 1) {\n        const constraint = this.constraints;\n        Vue.set(this.rule, 'constraint', {});\n        Vue.set(this.rule.constraint, this.logicalConstraintOperator, { '@list': constraint });\n      }\n\n      this.constraints.push(null);\n    },\n    nextLogicalConstraintOperator() {\n      const list = this.rule.constraint[this.logicalConstraintOperator];\n      const oldOp = this.logicalConstraintOperator;\n\n      Vue.delete(this.rule.constraint, this.logicalConstraintOperator);\n\n      // get the index of the current operator\n      const index = logicalOperatorList.indexOf(oldOp);\n      // the new logical operator is just the next one in the list\n      const nextOp = logicalOperatorList[(index + 1) % logicalOperatorList.length];\n\n      Vue.set(this.rule.constraint, nextOp, list);\n    },\n\n    // refinements\n    addRefinement() {\n      if (this.refinements == null) {\n        // action is just a string, but when adding refinements, action becomes an an array\n        // holding one refinement element\n        const action = this.action;\n        Vue.delete(this.rule, 'action');\n\n        Vue.set(this.rule, 'action', [{ 'rdf:value': action, refinement: [] }]);\n      }\n\n      // and when more refinements are added, these multiple refinements\n      // are combined in a list by a logical operator\n      if (this.refinements.length == 1) {\n        const refinement = this.refinements;\n        Vue.set(this.action[0], 'refinement', {});\n        Vue.set(this.action[0].refinement, this.logicalRefinementOperator, { '@list': refinement });\n      }\n\n      this.refinements.push(null);\n    },\n    nextLogicalRefinementOperator() {\n      const ref = this.action[0].refinement;\n      const list = ref[this.logicalRefinementOperator];\n      const oldOp = this.logicalRefinementOperator;\n\n      Vue.delete(ref, this.logicalRefinementOperator);\n\n      // get the index of the current operator\n      const index = logicalOperatorList.indexOf(oldOp);\n      // the new logical operator is just the next one in the list\n      const nextOp = logicalOperatorList[(index + 1) % logicalOperatorList.length];\n\n      Vue.set(ref, nextOp, list);\n    },\n  },\n};\n</script>\n\n<style scoped>\nh3 {\n  margin: 0px;\n}\n\na {\n  text-decoration: underline;\n}\n\n.rule-container {\n  min-width: 200px;\n}\n\n.rule-header {\n  position: relative;\n  margin-bottom: 10px;\n}\n\n.remove-button {\n  position: absolute;\n  right: 0px;\n  top: -10px;\n}\n\n.add-button {\n  display: block;\n  margin-top: 10px;\n  margin-left: 0px;\n}\n\np {\n  line-height: 1.2em;\n}\n\np.constraints {\n  margin-top: 40px;\n}\n\n.logical-operator {\n  text-decoration: none;\n  padding: 8px;\n  margin: 2px;\n  font-weight: bold;\n  color: #1f3b70;\n\n  /* disable text selection highlighting */\n  -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none;\n}\n\n.logical-operator:hover {\n  cursor: pointer;\n}\n\n.subrule-container {\n  margin-top: 50px;\n}\n</style>\n","<template>\n  <div>\n    <!-- uid -->\n    <div class=\"input-container\">\n      <div class=\"input-label\">\n        {{ $t('licenseIdLabel') }}\n      </div>\n      <BaseInput\n        undercover\n        class=\"input\"\n        :value=\"autoGeneratedText\"\n        :width=\"'225px'\"\n        disabled\n      />\n    </div>\n\n    <!-- assigner -->\n    <div class=\"input-container\">\n      <div class=\"input-label\">{{ $t('assigner') }}:</div>\n      <BaseInput v-model=\"assigner\" undercover class=\"input\" />\n      <BaseDropdown\n        :width=\"'250px'\"\n        class=\"dropdown-button\"\n        :list=\"partyTypeOptions\"\n        :init-value=\"partyTypeOptions[0]\"\n        @selected=\"partyTypeSelected('assigner', $event)\"\n      />\n    </div>\n\n    <!-- assignee -->\n    <div class=\"input-container\">\n      <div class=\"input-label\">{{ $t('assignee') }}:</div>\n      <BaseInput v-model=\"assignee\" undercover class=\"input\" />\n      <BaseDropdown\n        :width=\"'250px'\"\n        class=\"dropdown-button\"\n        :list=\"partyTypeOptions\"\n        :init-value=\"partyTypeOptions[0]\"\n        @selected=\"partyTypeSelected('assignee', $event)\"\n      />\n    </div>\n\n    <!-- asset -->\n    <div class=\"input-container\">\n      <div class=\"input-label\">{{ $t('target') }}:</div>\n      <BaseInput v-model=\"assetId\" undercover class=\"input\" />\n      <BaseDropdown\n        :width=\"'250px'\"\n        class=\"dropdown-button\"\n        :list=\"assetTypeOptions\"\n        :init-value=\"assetTypeOptions[0]\"\n        @selected=\"assetTypeSelected($event)\"\n      />\n    </div>\n\n    <!-- display constraints -->\n    <div class=\"constraints-container\">\n      <h3>{{ $t('globalConstraintsText') }}</h3>\n      {{ $t('globalConstraintsDescription') }}\n      <em v-if=\"isLogicalConstraint && logicalConstraintOperator == 'xone'\">\n        {{ $t('either') }}\n      </em>\n\n      <ul>\n        <li v-for=\"(constraint, index) in constraints\" :key=\"index\">\n          <ConstraintItem :policy=\"policy\" :path=\"[...constraintPath, index]\" />\n          <BaseButton\n            v-if=\"isLogicalConstraint && index < constraints.length - 1\"\n            textlike\n            class=\"logical-operator\"\n            @click=\"nextLogicalConstraintOperator()\"\n          >{{ $t(logicalConstraintOperator) }}</BaseButton>\n        </li>\n      </ul>\n\n      <!-- add new constraint -->\n      <BaseButton\n        class=\"add-constraint\"\n        type=\"button\"\n        title=\"Einschränkung hinzufügen\"\n        @click=\"addConstraint()\"\n      >\n        <i class=\"fas fa-plus\" />\n      </BaseButton>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport BaseInput from './BaseComponents/BaseInput.vue';\nimport BaseButton from './BaseComponents/BaseButton.vue';\nimport BaseDropdown from './BaseComponents/BaseDropdown.vue';\nimport ConstraintChooser from './ConstraintChooser.vue';\nimport ConstraintItem from './ConstraintItem.vue';\nimport { logicalOperatorList } from '../libs/odrl/constraints';\n\nexport default {\n  name: 'PolicyItem',\n  components: {\n    BaseInput,\n    BaseButton,\n    BaseDropdown,\n    ConstraintChooser,\n    ConstraintItem,\n  },\n  props: {\n    policy: {\n      type: Object,\n      required: true,\n    },\n  },\n  computed: {\n    lang() {\n      return this.$i18n.locale;\n    },\n    assetTypeOptions() {\n      return [this.$i18n.t('asset'), this.$i18n.t('assetCollection')];\n    },\n    partyTypeOptions() {\n      return [this.$i18n.t('individual'), this.$i18n.t('group'), this.$i18n.t('organization')];\n    },\n    autoGeneratedText() {\n      return this.$i18n.t('autoGenerated');\n    },\n    constraints() {\n      if (!this.policy.constraint) {\n        return null;\n      }\n      if (this.isLogicalConstraint) {\n        return this.policy.constraint[this.logicalConstraintOperator][\n          '@list'\n        ];\n      }\n      return this.policy.constraint;\n    },\n    isLogicalConstraint() {\n      // if policy.constraint is an array, that means that only one refinement has been added\n      // otherwise policy.refinement is an object containting a logical operator,\n      // which is an object containing a list, which is an array containting more than one refinement instances\n      return !Array.isArray(this.policy.constraint);\n    },\n    constraintPath() {\n      if (this.isLogicalConstraint) {\n        return ['constraint', this.logicalConstraintOperator, '@list'];\n      }\n      return ['constraint'];\n    },\n    logicalConstraintOperator() {\n      if (!this.policy.constraint) {\n        return null;\n      }\n\n      const op = Object.keys(this.policy.constraint)[0];\n      if (op == undefined) {\n        return logicalOperatorList[0];\n      }\n      return op;\n    },\n    assetIsString() {\n      return typeof this.policy.target === 'string';\n    },\n    assetLabel() {\n      if (this.assetIsString) {\n        return this.assetOptions[this.lang][0];\n      }\n      return this.assetOptions[this.lang][1];\n    },\n    assetId: {\n      get() {\n        if (this.assetIsString) {\n          return this.policy.target;\n        }\n        return this.policy.target.uid;\n      },\n      set(id) {\n        if (this.assetIsString) {\n          this.policy.target = id;\n        } else {\n          this.policy.target.uid = id;\n        }\n      },\n    },\n    assignerIsString() {\n      return typeof this.policy.assigner === 'string';\n    },\n    assigner: {\n      get() {\n        if (this.assignerIsString) {\n          return this.policy.assigner;\n        }\n        return this.policy.assigner.uid;\n      },\n      set(a) {\n        if (this.assignerIsString) {\n          this.policy.assigner = a;\n          return;\n        }\n        this.policy.assigner.uid = a;\n      },\n    },\n    assigneeIsString() {\n      return typeof this.policy.assignee === 'string';\n    },\n    assignee: {\n      get() {\n        if (this.assigneeIsString) {\n          return this.policy.assignee;\n        }\n        return this.policy.assignee.uid;\n      },\n      set(a) {\n        if (this.assigneeIsString) {\n          this.policy.assignee = a;\n          return;\n        }\n        this.policy.assignee.uid = a;\n      },\n    },\n  },\n  methods: {\n    // constraints\n    addConstraint() {\n      if (!this.constraints) {\n        Vue.set(this.policy, 'constraint', []);\n      }\n\n      // make use of the logical operator to combine more than one constraint\n      if (this.constraints.length == 1) {\n        const constraint = this.constraints;\n        Vue.set(this.policy, 'constraint', {});\n        Vue.set(this.policy.constraint, this.logicalConstraintOperator, {\n          '@list': constraint,\n        });\n      }\n\n      this.constraints.push(null);\n    },\n    nextLogicalConstraintOperator() {\n      const list = this.policy.constraint[this.logicalConstraintOperator];\n      const oldOp = this.logicalConstraintOperator;\n\n      Vue.delete(this.policy.constraint, this.logicalConstraintOperator);\n\n      // get the index of the current operator\n      const index = logicalOperatorList.indexOf(oldOp);\n      // the new logical operator is just the next one in the list\n      const nextOp = logicalOperatorList[(index + 1) % logicalOperatorList.length];\n\n      Vue.set(this.policy.constraint, nextOp, list);\n    },\n    // assets\n    assetTypeSelected(type) {\n      if (type == this.$i18n.t('assetCollection')) {\n        Vue.set(this.policy, 'target', {\n          '@type': 'AssetCollection',\n          uid: this.assetId,\n        });\n      } else if (type == this.$i18n.t('asset')) {\n        Vue.set(this.policy, 'target', this.assetId);\n      }\n    },\n    partyTypeSelected(party, type) {\n      if (type == this.$i18n.t('individual')) {\n        Vue.set(this.policy, party, this[party]);\n      } else if (type == this.$i18n.t('group')) {\n        Vue.set(this.policy, party, {\n          '@type': ['PartyCollection', 'vcard:Group'],\n          uid: this[party],\n        });\n      } else if (type == this.$i18n.t('organization')) {\n        Vue.set(this.policy, party, {\n          '@type': ['Party', 'vcard:Organization'],\n          uid: this[party],\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.input {\n  margin-left: 30px;\n  width: 225px;\n}\n\n.input-label {\n  display: inline-block;\n  font-weight: bold;\n  text-align: right;\n  width: 190px;\n}\n\n.input-container {\n  margin-bottom: 15px;\n}\n\n.dropdown-button {\n  display: inline-block;\n  width: 190px;\n}\n\n.asset-container {\n  margin-top: 40px;\n  margin-bottom: 60px;\n}\n\n.base-button-textlike {\n  padding-top: 5px;\n  padding-bottom: 5px;\n}\n\n.constraints-container {\n  margin-top: 40px;\n}\n\n.add-constraint {\n  margin-left: 0px;\n  margin-bottom: 20px;\n  padding: 10px 15px;\n}\n\n.logical-operator {\n  text-decoration: none;\n  padding: 8px;\n  margin: 2px;\n  font-weight: bold;\n  color: #1f3b70;\n\n  /* disable text selection highlighting */\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n}\n\n.logical-operator:hover {\n  cursor: pointer;\n}\n</style>\n","<template>\n  <div class=\"editor-nav\">\n    <div class=\"left\">\n      <slot name=\"left\" />\n    </div>\n    <div class=\"right\">\n      <slot name=\"right\" />\n    </div>\n    <div class=\"clear\" />\n  </div></template>\n\n\n<style scoped>\n\n.editor-nav{\n  padding-top: 15px;\n  padding-bottom: 5px;\n  margin-left: 10px;\n  color: #1f3b70;\n  height: 25px;\n}\n\n.editor-nav .left{\n  float: left;\n}\n\n.editor-nav .right {\n  float: right;\n}\n\neditor-nav .clear {\n  clear: both;\n}\n</style>\n","<template>\n  <div class=\"rule-editor\">\n\n    <EditorNavBar>\n      <template v-slot:left>\n        <a href=\"#\" @click=\"$emit('abort')\">\n          <i class=\"fas fa-arrow-circle-left\" /> {{ $t(\"back\") }}\n        </a>\n      </template>\n      <template v-slot:right>\n        <a href=\"#\" @click=\"$emit('goForth', policy)\">\n          {{ $t(\"next\") }} <i class=\"fas fa-arrow-circle-right\" />\n        </a>\n      </template>\n    </EditorNavBar>\n\n    <div class=\"header-wrapper\">\n\n      <div class=\"language-container\">\n        <i class=\"fas fa-language\" />\n        {{ $t('languageButtonText') }}:\n        <BaseDropdown\n          :width=\"'150px'\"\n          class=\"language-dropdown\"\n          :list=\"languages\"\n          :init-value=\"languages[0]\"\n          @selected=\"switchLanguage($event)\"\n        />\n      </div>\n\n      <div class=\"editor-header\">\n        <BaseButton @click=\"newRule('permission')\">\n          {{ $t('permissionButtonText') }}\n        </BaseButton>\n        <BaseButton @click=\"newRule('obligation')\">\n          {{ $t('obligationButtonText') }}\n        </BaseButton>\n        <BaseButton @click=\"newRule('prohibition')\">\n          {{ $t('prohibitionButtonText') }}\n        </BaseButton>\n      </div>\n\n    </div>\n\n    <div class=\"editor-body\">\n      <PolicyTree\n        class=\"policy-tree\"\n        :policy=\"policy\"\n        :selected-path=\"editPath\"\n        @followPath=\"editPath = $event\"\n      />\n      <PolicyItem\n        v-if=\"!showRulePane\"\n        class=\"policy-detail\"\n        :policy=\"policy\"\n        @followLink=\"editPath = $event\"\n      />\n      <RuleItem\n        v-if=\"showRulePane\"\n        class=\"policy-detail\"\n        :policy=\"policy\"\n        :path=\"editPath\"\n        @followLink=\"editPath = $event\"\n      />\n    </div>\n\n    <div class=\"policy-meaning\">\n\n      <h2>Was bedeutet diese Lizenz?</h2>\n      <p v-html=\"licenceText\" />\n      <h2>Provisorische Lizenz</h2>\n      <pre>{{ policy }}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport BaseButton from './BaseComponents/BaseButton.vue';\nimport BaseDropdown from './BaseComponents/BaseDropdown.vue';\nimport BaseInput from './BaseComponents/BaseInput.vue';\nimport PolicyTree from './PolicyTree/PolicyTree.vue';\nimport RuleItem from './RuleItem.vue';\nimport PolicyItem from './PolicyItem.vue';\nimport EditorNavBar from './EditorNavBar.vue';\n\nimport { jsonPath } from '../libs/jsonpath-0.8.0';\nimport { actionList } from '../libs/odrl/actions.js';\n\nexport default {\n  name: 'RuleEditor',\n  components: {\n    BaseButton,\n    BaseInput,\n    BaseDropdown,\n    PolicyTree,\n    RuleItem,\n    PolicyItem,\n    EditorNavBar,\n  },\n  data() {\n    return {\n      editPath: [],\n      policy: {\n        uid: '',\n        target: '',\n        assigner: '',\n        assignee: '',\n        follow(path) {\n          return path.reduce((result, pathSegment) => result[pathSegment], this);\n        },\n      },\n    };\n  },\n  computed: {\n    languages() {\n      return [this.$i18n.t('german'), this.$i18n.t('english')];\n    },\n    showRulePane() {\n      return this.editPath.length > 0;\n    },\n    licenceText() {\n      let text = '';\n\n      if (this.policy.permission) {\n        text += 'Erlaubt ist: ';\n       \n        // Gets all actions via jsonPath\n        let actions = jsonPath(this.policy, \"$.permission[*].action\");\n\n        // Searches label for each action\n        for (let i = 0; i < actions.length; i++) { \n          text += this.$i18n.t(actionList.find(item => item === (actions[i])));\n          text += \", \";\n        }\n\n        // Removes last comma\n        text = text.substr(0, text.length-2)\n      }\n\n      if (this.policy.obligation) {\n        text += '<br>Verpflichtend ist: ';\n        \n        // Gets all actions via jsonPath\n        let actions = jsonPath(this.policy, \"$.obligation[*].action\");\n\n        // Searches label for each action\n        for (let i = 0; i < actions.length; i++) { \n          text += this.$i18n.t(actionList.find(item => item === (actions[i])));\n          text += \", \";\n        }\n\n        // Removes last comma\n        text = text.substr(0, text.length-2)\n      }\n\n      if (this.policy.prohibition) {\n        text += '<br>Verboten ist: ';\n\n        // Gets all actions via jsonPath\n        let actions = jsonPath(this.policy, \"$.prohibition[*].action\");\n\n        // Searches label for each action\n        for (let i = 0; i < actions.length; i++) { \n          text += this.$i18n.t(actionList.find(item => item === (actions[i])));\n          text += \", \";\n        }\n\n        // Removes last comma\n        text = text.substr(0, text.length-2)\n      }\n\n      return text;\n    },\n  },\n  methods: {\n    newRule(type) {\n      if (!this.policy[type]) {\n        Vue.set(this.policy, type, []);\n      }\n      const idx = this.policy[type].length;\n      Vue.set(this.policy[type], idx, {});\n      this.editPath = [type, idx];\n    },\n    switchLanguage(lang) {\n      if (this.$i18n.t('currentLanguage') != lang) {\n        this.$i18n.locale = lang[0].toLowerCase() + lang[1];\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.policy-tree {\n  float: left;\n  width: 200px;\n  padding: 0px 8px;\n  box-sizing: border-box;\n  box-shadow: 3px 0px 2px -3px gray;\n  padding-bottom: 12px;\n}\n\n.policy-detail {\n  margin-left: 220px;\n  padding: 0px 0px 0px 15px;\n}\n\n.policy-meaning{\n  margin-left: 200px;\n  padding: 10px;\n}\n\n.header-wrapper {\n  background-color: white;\n  box-shadow: 0px 3px 2px -3px gray;\n}\n\n.editor-header {\n  overflow: hidden;\n\n  padding-bottom: 20px;\n  padding-top: 0px;\n  width: 50%;\n  min-width: 350px;\n}\n\n.editor-body {\n  padding-top: 24px;\n}\n\n.editor-nav{\n  padding-top: 15px;\n  padding-bottom: 5px;\n  margin-left: 10px;\n  color: #1f3b70;\n}\n\n.editor-nav .left{\n  float: left;\n}\n\n.editor-nav .right {\n  float: right;\n}\n\neditor-nav .clear {\n  clear: both;\n}\n\ninput.guid-input {\n  margin-left: 10px;\n  width: 175px;\n}\n\n.language-container {\n  float: right;\n  text-align: right;\n  width: 50%;\n  margin: 0px;\n  padding: 0px;\n}\n\n.language-dropdown {\n  display: inline-block;\n}\n\n.fa-language {\n  margin-right: 5px;\n}\n\n@media screen and (max-width: 840px) {\n  .language-container {\n    text-align: left;\n    float: left;\n    width: 100%;\n  }\n\n  .policy-detail {\n    display: inline-block;\n    margin-left: 0px;\n  }\n\n  .editor-body {\n    padding: 0px;\n  }\n}\n\n@media screen and (max-width: 500px) {\n  .editor-body {\n    margin: 0px;\n  }\n}\n</style>\n","<template>\n  <div>\n    <div v-if=\"!user\">\n      <h2>Wer sind Sie</h2>\n      <form action=\"\">\n        <ul>\n          <li><input\n            type=\"radio\"\n            name=\"role\"\n            value=\"Land\"\n            @click=\"user = 'Land'\"\n          > Land</li>\n          <li><input\n            type=\"radio\"\n            name=\"role\"\n            value=\"Kreis\"\n            @click=\"user = 'Kreis'\"\n          > Kreis</li>\n          <li><input\n            type=\"radio\"\n            name=\"role\"\n            value=\"Schule\"\n            @click=\"user = 'Schule'\"\n          > Schule</li>\n          <li><input\n            type=\"radio\"\n            name=\"role\"\n            value=\"Lehrer\"\n            @click=\"user = 'Lehrer'\"\n          > Lehrer</li>\n          <li class=\"disabled\"><input\n            type=\"radio\"\n            name=\"role\"\n            value=\"Eltern\"\n            disabled\n          > Eltern</li>\n          <li class=\"disabled\"><input\n            type=\"radio\"\n            name=\"role\"\n            value=\"Schueler\"\n            disabled\n          > Schüler</li>\n        </ul>\n      </form>\n    </div>\n    <div v-else>\n      <p class=\"role-top\" @click=\"user = null\">Sie sind eingeloggt als: {{ user }}</p>\n\n      <!-- TODO: only continue if role is eligible to continue with currently checked out media -->\n\n      <div v-if=\"!temporal\">\n        <h2>Wie lange soll die Lizenz laufen?</h2>\n        <form action=\"\">\n          <h3>Unbegrenzte Laufzeit</h3>\n          <ul>\n            <li><input\n              type=\"radio\"\n              name=\"temporal\"\n              value=\"unlimited\"\n              @click=\"temporal = 'unbegrenzt'\"\n            > Unbegrenzte Laufzeit</li>\n          </ul>\n          <h3>Begrenzte Laufzeiten</h3>\n          <ul>\n            <li><input\n              type=\"radio\"\n              name=\"temporal\"\n              value=\"10 years\"\n              @click=\"temporal = '10 Jahre'\"\n            > 10 Jahre</li>\n            <li><input\n              type=\"radio\"\n              name=\"temporal\"\n              value=\"7 years\"\n              @click=\"temporal = '7 Jahre'\"\n            > 7 Jahre</li>\n            <li><input\n              type=\"radio\"\n              name=\"temporal\"\n              value=\"48 hours\"\n              @click=\"temporal = '48 Stunden'\"\n            > 48 hours</li>\n          </ul>\n        </form>\n      </div>\n      <div v-else>\n        <p class=\"chosen-option\" @click=\"temporal = null\">Gewählte Laufzeit der Lizenz: {{ temporal }}</p>\n\n        <div v-if=\"!audience.chosen\">\n          <h2>Wem sollen die Inhalte zugänglich sein?</h2>\n          <form action=\"\">\n            <ul>\n              <li><input\n                v-model=\"audience.teacher\"\n                type=\"checkbox\"\n                name=\"audience1\"\n                value=\"Lehrer\"\n              > Lehrer</li>\n              <li><input\n                v-model=\"audience.student\"\n                type=\"checkbox\"\n                name=\"audience2\"\n                value=\"Schueler\"\n              > Schüler</li>\n              <li><input\n                v-model=\"audience.parents\"\n                type=\"checkbox\"\n                name=\"audience3\"\n                value=\"Eltern\"\n              > Eltern</li>\n            </ul>\n            <button type=\"button\" :disabled=\"!(audience.teacher || audience.student || audience.parents)\" @click=\"audience.chosen = true\">Auswahl speichern</button>\n          </form>\n        </div>\n\n        <div v-else>\n          <p class=\"chosen-option\" @click=\"audience.chosen = false\">\n            Lizenzierte Nutzergruppe:\n            <span v-if=\"audience.teacher\">Lehrer<span v-if=\"audience.student || audience.parents\">, </span></span>\n            <span v-if=\"audience.student\">Schüler<span v-if=\"audience.parents\">, </span></span>\n            <span v-if=\"audience.parents\">Eltern</span>\n          </p>\n\n          <div v-if=\"!rights.chosen\">\n            <h2>Welche Rechte möchten Sie für die gewählte Nutzergruppe erwerben?</h2>\n            <form action=\"\">\n              <ul>\n                <li><input\n                  v-model=\"rights.nc_public_display\"\n                  type=\"checkbox\"\n                  name=\"right1\"\n                  value=\"nc_public_display\"\n                > Recht auf nicht-gewerbliche öffentliche Vorführung</li>\n                <li><input\n                  v-model=\"rights.download\"\n                  type=\"checkbox\"\n                  name=\"right2\"\n                  value=\"download\"\n                > Recht auf Download </li>\n                <li><input\n                  v-model=\"rights.streaming\"\n                  type=\"checkbox\"\n                  name=\"right3\"\n                  value=\"streaming\"\n                > Recht auf Streaming</li>\n                <li><input\n                  v-model=\"rights.save\"\n                  type=\"checkbox\"\n                  name=\"right4\"\n                  value=\"save\"\n                > Recht zu speichern</li>\n                <li><input\n                  v-model=\"rights.intranet_access\"\n                  type=\"checkbox\"\n                  name=\"right5\"\n                  value=\"intranet_access\"\n                > Recht auf öffentliche Zugänglichmachung im Schulintranet</li>\n                <li><input\n                  v-model=\"rights.platform_access\"\n                  type=\"checkbox\"\n                  name=\"right6\"\n                  value=\"platform_access\"\n                > Recht auf öffentliche Zugänglichmachung in Lernplattformen</li>\n                <li><input\n                  v-model=\"rights.transform\"\n                  type=\"checkbox\"\n                  name=\"right7\"\n                  value=\"transform\"\n                > Recht auf technische Bearbeitung </li>\n                <li><input\n                  v-model=\"rights.editing\"\n                  type=\"checkbox\"\n                  name=\"right8\"\n                  value=\"editing\"\n                > Recht auf inhaltliche Bearbeitung</li>\n                <li><input\n                  v-model=\"rights.remix\"\n                  type=\"checkbox\"\n                  name=\"right9\"\n                  value=\"remix\"\n                > Recht auf Remix</li>\n                <li><input\n                  v-model=\"rights.distribute_derivate\"\n                  type=\"checkbox\"\n                  name=\"right10\"\n                  value=\"distribute_derivate\"\n                > Recht auf öffentliche Zugänglichmachung bearbeiteter Materialien</li>\n                <li><input\n                  v-model=\"rights.meta_creation\"\n                  type=\"checkbox\"\n                  name=\"right11\"\n                  value=\"meta_creation\"\n                > Recht auf Erstellung von Metabeschreibungen und Vorschaubildern</li>\n              </ul>\n              <button type=\"button\" :disabled=\"!(rights.nc_public_display || rights.download || rights.streaming || rights.save || rights.intranet_access || rights.platform_access ||rights.transform || rights.editing || rights.remix || rights.distribute_derivate || rights.meta_creation)\" @click=\"rights.chosen = true\">Auswahl speichern</button>\n            </form>\n          </div>\n\n          <div v-else>\n            <p class=\"chosen-option\" @click=\"rights.chosen = false\">\n              <pre>{{ rights }}</pre>\n            </p>\n            Prize: 4.000 EUR <button type=\"button\" style=\"font-size: 25px; border-radius: 5px\">=&gt; JETZT richtig absahnen!!! &lt;=</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div></template>\n\n<script>\n\nexport default {\n  name: 'BuyCaseStudy',\n  data() {\n    return {\n      user: null,\n      temporal: null,\n      audience: {\n        teacher: false,\n        student: false,\n        parents: false,\n        chosen: false,\n      },\n      rights: {\n        nc_public_display: false,\n        download: false,\n        streaming: false,\n        save: false,\n        intranet_access: false,\n        platform_access: false,\n        transform: false,\n        editing: false,\n        remix: false,\n        distribute_derivate: false,\n        meta_creation: false,\n        chosen: false,\n      },\n    };\n  },\n};\n</script>\n\n<style scoped>\ninput[type=\"radio\"] {\n    vertical-align: bottom;\n}\np {\n    cursor: pointer;\n    padding: 12px;\n}\n.role-top {\n    background-color: rgb(215, 229, 238);\n    cursor: pointer;\n    padding: 12px;\n    text-align: center;\n}\n.disabled {\n    color: gray;\n    font-style: italic;\n}\n.chosen-option {\n    border-left: 2px solid black;\n}\n</style>\n","<template>\n  <div :class=\"{ center: !enabled }\">\n    <input type=\"checkbox\" :checked=\"enabled\" @change=\"$emit('update:price', $event.target.checked ? backupPrice : false)\">\n    <input\n      :class=\"{ invisible: !enabled }\"\n      class=\"price-input\"\n      type=\"number\"\n      :disabled=\"!enabled\"\n      :value=\"priceVal\"\n      step=\"0.01\"\n      @change=\"backupPrice = $event.target.value; $emit('update:price', backupPrice)\"\n    >\n    <span :class=\"{ invisible: !enabled }\">EUR</span>\n  </div>\n\n</template>\n\n<script>\nexport default {\n  name: 'PriceInput',\n  props: {\n    price: {\n      required: true,\n    },\n  },\n  data() {\n    return {\n      backupPrice: 20,\n    };\n  },\n  computed: {\n    priceVal() {\n      return this.enabled ? this.price : this.cachedNum;\n    },\n    enabled() {\n      return !!this.price;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.invisible {\n    display: none;\n}\n.center {\n    text-align: center;\n}\n.price-input {\n    font-size: inherit;\n    padding: 0px;\n    margin: 0px;\n    border: none;\n    border-bottom: 1px dotted gray;\n    width: 4em;\n    background-color: transparent;\n}\n</style>\n","<template>\n  <div>\n    <h1>Gebiete und Laufzeiten</h1>\n\n    <p v-if=\"warning\" class=\"warning\">Einige Laufzeiten sind innerhalb einer Lizenz mehrfach angegeben.</p>\n\n    <table>\n      <tr>\n        <th />\n        <th\n          v-for=\"(licenseInfo, index) in licenseInfos\"\n          :key=\"index\"\n          :colspan=\"licenseInfo.optionsCount\"\n          class=\"policies-first-cell\"\n        >{{ licenseInfo.label }} </th>\n        <th><button @click=\"$emit('addPolicy')\"><i class=\"fas fa-plus-circle\" /></button></th>\n      </tr>\n      <tr>\n        <th>Lizenzgebiet</th>\n        <th\n          v-for=\"(cell, index) in columnInformation\"\n          :key=\"index\"\n          :class=\"{ 'policies-first-cell': cell.timeframeIndex === 0, 'duplicate': warning && warning[cell.licenseIndex].duplicates.indexOf(cell.timeframeIndex) >= 0}\"\n        >\n          <span v-if=\"cell.type === 'timeframe'\">\n            <select @change=\"updatetimeframe(cell.licenseIndex, cell.timeframeIndex, $event.target.value)\">\n              <option v-for=\"(timeframeStep, index) in timeframeSteps\" :key=\"index\" :selected=\"cell.timeframe === timeframeStep\">{{ timeframeStep }}</option>\n            </select>\n            <button @click=\"removetimeframe(cell.licenseIndex, cell.timeframeIndex)\"><i class=\"fas fa-trash-alt\" /></button>\n          </span>\n          <button v-if=\"cell.type === 'add'\" @click=\"addtimeframe(cell.licenseIndex)\"><i class=\"fas fa-plus-circle\" /></button>\n        </th>\n      </tr>\n      <tr>\n        <td>Land</td>\n        <td v-for=\"(column, index) in columnInformation\" :key=\"index\" :class=\"{ 'policies-first-cell': column.timeframeIndex === 0 }\">\n          <PriceInput v-if=\"column.type === 'timeframe'\" :price=\"column.state\" @update:price=\"updatePrice('state', column.licenseIndex, column.timeframeIndex, $event)\" />\n        </td>\n      </tr>\n      <tr>\n        <td>Kreis</td>\n        <td v-for=\"(column, index) in columnInformation\" :key=\"index\" :class=\"{ 'policies-first-cell': column.timeframeIndex === 0 }\">\n          <PriceInput v-if=\"column.type === 'timeframe'\" :price=\"column.county\" @update:price=\"updatePrice('county', column.licenseIndex, column.timeframeIndex, $event)\" />\n        </td>\n      </tr>\n      <tr>\n        <td>Schule</td>\n        <td v-for=\"(column, index) in columnInformation\" :key=\"index\" :class=\"{ 'policies-first-cell': column.timeframeIndex === 0 }\">\n          <PriceInput v-if=\"column.type === 'timeframe'\" :price=\"column.school\" @update:price=\"updatePrice('school', column.licenseIndex, column.timeframeIndex, $event)\" />\n        </td>\n      </tr>\n      <tr>\n        <td>Lehrer</td>\n        <td v-for=\"(column, index) in columnInformation\" :key=\"index\" :class=\"{ 'policies-first-cell': column.timeframeIndex === 0 }\">\n          <PriceInput v-if=\"column.type === 'timeframe'\" :price=\"column.teacher\" @update:price=\"updatePrice('teacher', column.licenseIndex, column.timeframeIndex, $event)\" />\n        </td>\n      </tr>\n      <tr>\n        <td>Schüler/Eltern</td>\n        <td v-for=\"(column, index) in columnInformation\" :key=\"index\" :class=\"{ 'policies-first-cell': column.timeframeIndex === 0 }\">\n          <PriceInput v-if=\"column.type === 'timeframe'\" :price=\"column.pupil\" @update:price=\"updatePrice('pupil', column.licenseIndex, column.timeframeIndex, $event)\" />\n        </td>\n      </tr>\n    </table>\n    <pre>{{ policies }}</pre>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport PriceInput from './PriceInput.vue';\nimport BaseButton from './BaseComponents/BaseButton.vue';\n\nconst licenseEntities = ['state', 'county', 'school', 'teacher', 'pupil'];\nconst timeframeSteps = ['10 Jahre', '9 Jahre', '8 Jahre', '7 Jahre', '6 Jahre', '5 Jahre', '48 Stunden', '24 Stunden', 'unbegrenzt'];\n\nexport default {\n  name: 'DimensionEditor',\n  components: {\n    PriceInput,\n    BaseButton,\n  },\n  props: {\n    policies: {\n      type: Array,\n      required: [],\n    },\n  },\n  data() {\n    return {};\n  },\n  computed: {\n    licenseInfos() {\n      const infos = this.columnInformation.reduce((agregate, cell) => {\n        if (cell.type === 'empty') {\n          return agregate;\n        }\n        if (agregate.length === 0) {\n          return [{ label: this.policies[cell.licenseIndex].label, licenseIndex: cell.licenseIndex, optionsCount: 1 }];\n        }\n        const prev = agregate[agregate.length - 1];\n        if (prev.licenseIndex === cell.licenseIndex) {\n          prev.optionsCount++;\n          agregate[agregate.length - 1] = prev;\n          return agregate;\n        }\n        return [...agregate, { label: this.policies[cell.licenseIndex].label, licenseIndex: cell.licenseIndex, optionsCount: 1 }];\n      }, []);\n      return infos;\n    },\n    columnInformation() {\n      const info = [];\n      this.policies.forEach((license, lIndex) => {\n        const licenseInfos = license.options.timeframes.map((timeframe, tIndex) => ({\n          type: 'timeframe',\n          timeframe,\n          licenseIndex: lIndex,\n          timeframeIndex: tIndex,\n          state: license.options.state[tIndex],\n          county: license.options.county[tIndex],\n          school: license.options.school[tIndex],\n          teacher: license.options.teacher[tIndex],\n          pupil: license.options.pupil[tIndex],\n        }));\n        info.push(...licenseInfos);\n        info.push({ type: 'add', licenseIndex: lIndex });\n      });\n      info.push({ type: 'empty' });\n      return info;\n    },\n    warning() {\n      const howManyDuplicatesPerLicense = ((license, index) => {\n        const attachIndex = ((timeframe, index) => ({ timeframe, index }));\n        const onlyDuplicates = (counts => (timeframeInfo) => {\n          const count = (counts[timeframeInfo.timeframe] || 0);\n          return (counts[timeframeInfo.timeframe] = counts + 1) > 1;\n        })({});\n        const stripToIndex = (info => info.index);\n        const duplicatesIndices = license.options.timeframes\n          .map(attachIndex)\n          .filter(onlyDuplicates)\n          .map(stripToIndex);\n        return {\n          licenseIndex: index,\n          hasDuplicates: duplicatesIndices.length > 0,\n          duplicates: duplicatesIndices,\n        };\n      });\n      const duplicatesInfo = this.policies.map(howManyDuplicatesPerLicense);\n      const orAll = (seenAnyDuplicate, info) => (seenAnyDuplicate || info.hasDuplicates);\n      const anyDuplicates = duplicatesInfo.reduce(orAll, false);\n      if (anyDuplicates) {\n        return duplicatesInfo;\n      }\n      return false;\n    },\n    timeframeSteps() {\n      return timeframeSteps;\n    },\n  },\n  methods: {\n    updatePrice(area, licenseIndex, timeframeIndex, priceInfo) {\n      let price = priceInfo;\n      if (priceInfo) {\n        price = Number(parseFloat(price).toFixed(2));\n      }\n      Vue.set(this.policies[licenseIndex].options[area], timeframeIndex, price);\n    },\n    updatetimeframe(licenseIndex, timeframeIndex, timeframe) {\n      Vue.set(this.policies[licenseIndex].options.timeframes, timeframeIndex, timeframe);\n    },\n    removetimeframe(licenseIndex, timeframeIndex) {\n      Vue.delete(this.policies[licenseIndex].options.timeframes, timeframeIndex);\n      licenseEntities.forEach((entity) => {\n        Vue.delete(this.policies[licenseIndex].options[entity], timeframeIndex);\n      });\n    },\n    addtimeframe(licenseIndex) {\n      licenseEntities.forEach((entity) => {\n        const index = this.policies[licenseIndex].options[entity].length;\n        Vue.set(this.policies[licenseIndex].options[entity], index, false);\n      });\n      this.policies[licenseIndex].options.timeframes.push('unbegrenzt');\n    },\n  },\n};\n</script>\n\n<style scoped>\ntd, th {\n    padding: 8px;\n    margin-left: 4px;\n}\ntd:not(.policies-first-cell):not(:first-child), th:not(.policies-first-cell):not(:first-child) {\n  border-left: 4px solid white;\n}\ntr:nth-child(even) {\n    background-color: #DDD;\n}\ntable {\n    border-collapse: collapse;\n}\n.policies-first-cell {\n  border-left: 1px solid black;\n}\nbutton {\n  font-size: inherit;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0px;\n  margin: 0px 8px;\n  color: #444;\n}\nbutton:hover {\n  color: black;\n}\nselect {\n  font-size: inherit;\n  border: none;\n  background-color: transparent;\n}\n.warning {\n  background: rgb(255, 219, 219);\n  border-radius: 3px 3px;\n  color: rgb(204, 0, 0);\n  padding: 8px;\n}\nth.duplicate {\n  background-color: rgb(255, 219, 219);\n}\n</style>\n"]}